
# -*- coding: utf-8 -*-
"""
Created on Fri Jun 21 17:09:21 2024

@author: Tame
"""

from __future__ import absolute_import
from __future__ import print_function
from Optimized_Reduced_Fuzzy_Rule import fuzzy_controller_function1
#from OriginalFuzzy import fuzzy_controller_function
import os
import sys
#import optparse
import pickle
import time
#import math

t1 = time.time()
# we need to import python modules from the $SUMO_HOME/tools directory
if 'SUMO_HOME' in os.environ:
    tools = os.path.join(os.environ['SUMO_HOME'], 'D:/RoadNetwork/Actuated')
    sys.path.append(tools)
else:
    sys.exit("please declare environment variable 'SUMO_HOME'")

from sumolib import checkBinary  # noqa
import traci  # noqa

def get_emergencyCar(vehicleIDList):
    emc_list = []
    for vehicleID in vehicleIDList:
        if vehicleID.startswith('emergency-route'):
            emc_list.append(vehicleID);
    return emc_list

def current_moving_lane(trafficLightID):
    if traci.trafficlight.getRedYellowGreenState(trafficLightID).startswith('rrrrr'):
        return 'NS'
    else:
        return 'WE'
    
def get_lane_lists(traffic_lanes_in_x_axis, traffic_lanes_in_y_axis, trafficLightID):
    if current_moving_lane(trafficLightID) == 'WE':
        return traffic_lanes_in_x_axis, traffic_lanes_in_y_axis
    else:
        return traffic_lanes_in_y_axis, traffic_lanes_in_x_axis


def get_vehicles_in_lane(array_of_lane_id):
    vehicles = []
    for laneIDs in array_of_lane_id:
        vehicles = vehicles + list(traci.lane.getLastStepVehicleIDs(laneIDs))
    return vehicles

def vehicle_waiting_time_in_lane(vehicle_list):
    waiting_times = []
    for vehicle in vehicle_list:
        waiting_times.append(traci.vehicle.getAccumulatedWaitingTime(vehicle))
    if len(waiting_times) == 0:
        return 0
    else:
        return waiting_times
    
def get_emv_waiting_time(vehicle_list):
    emvs_on_the_lane = get_emergencyCar(vehicle_list)
    emv_waiting_time = vehicle_waiting_time_in_lane(emvs_on_the_lane)
    if emv_waiting_time != 0:
        return sum(emv_waiting_time)
    return 0 


def get_total_vehicle_count(detector_ids):
    """
    Returns the total number of vehicles for all given detector IDs.

    :param detector_ids: A list of detector IDs to get the vehicle counts for.
    :return: The total number of vehicles detected across all detector IDs.
    """
    total_vehicle_count = 0
    for detector_id in detector_ids:
        total_vehicle_count += traci.lanearea.getLastStepVehicleNumber(detector_id)
    return total_vehicle_count

def vehicle_waiting_time(detector_ids):
    """
    Calculates the total waiting time for vehicles detected by a list of lane area detectors.

    :param detector_ids: A list of lane area detector IDs.
    :return: The total waiting time for all detected vehicles.
    """
    total_waiting_time = 0.0

    # Iterate over each detector ID
    for detector_id in detector_ids:
        # Get the list of vehicle IDs for the current detector
        vehicle_ids = traci.lanearea.getLastStepVehicleIDs(detector_id)

        # Sum up the waiting time for each detected vehicle
        for vehicle_id in vehicle_ids:
            total_waiting_time += traci.vehicle.getAccumulatedWaitingTime(vehicle_id)

    return total_waiting_time

def get_emergency_vehicles(detector_list):
    emergency_vehicles = []
    for detector in detector_list:
        vehicle_ids = traci.lanearea.getLastStepVehicleIDs(detector)
        for vehicle_id in vehicle_ids:
            # Check if the vehicle_id starts with 'emergency-route'
            if traci.vehicle.getTypeID(vehicle_id).startswith('emergency-route'):
                emergency_vehicles.append(vehicle_id)
    return emergency_vehicles

def calculate_distance_based_on_lane_length(vehicle_id, intersection_position):
    # Get the vehicle's current lane and position
    lane = traci.vehicle.getLaneID(vehicle_id)
    position = traci.vehicle.getLanePosition(vehicle_id)

    # Get the length of the lane
    lane_length = traci.lane.getLength(lane)

    # Calculate the distance to the intersection
    distance_to_intersection = lane_length - position

    return distance_to_intersection

def calculate_vehicle_distances(intersection_position, traffic_lanes_in_x_axis, traffic_lanes_in_y_axis, trafficLightID):
    green_lanes, red_lanes = get_lane_lists(traffic_lanes_in_x_axis, traffic_lanes_in_y_axis, trafficLightID)
    
    green_vehicles = get_vehicles_in_lane(green_lanes)
    red_vehicles = get_vehicles_in_lane(red_lanes)
    
    total_distance_green = sum(calculate_distance_based_on_lane_length(vehicle_id, intersection_position) for vehicle_id in green_vehicles)
    total_distance_red = sum(calculate_distance_based_on_lane_length(vehicle_id, intersection_position) for vehicle_id in red_vehicles)
    
    # Convert to integer if necessary
    total_distance_green = int(total_distance_green)
    total_distance_red = int(total_distance_red)
    
    return total_distance_green, total_distance_red

def get_vehicles_in_lane_area_detectors(detector_ids):
    """
    Get vehicles detected by the specified lane area detectors.
    Returns a dictionary with detector ID as keys and lists of vehicle IDs as values.
    """
    vehicles_in_detectors = {}
    for detector_id in detector_ids:
        # Use traci.lanearea.getLastStepVehicleIDs to get vehicles for lane area detectors
        vehicles_in_detectors[detector_id] = traci.lanearea.getLastStepVehicleIDs(detector_id)
    return vehicles_in_detectors

def calculate_vehicle_distances_from_detectors(intersection_position, detector_phase_NS, detector_phase_EW):
    """
    Calculate total distance of vehicles from the intersection for NS and EW directions using lane area detectors.
    Consider vehicles within ranges of 0 to 15, 15 to 30, and greater than 30.
    """
    # Fetch vehicles detected in NS and EW detectors
    ns_vehicles = get_vehicles_in_lane_area_detectors(detector_phase_NS)
    ew_vehicles = get_vehicles_in_lane_area_detectors(detector_phase_EW)

    # Initialize total distances
    total_distance_ns_0_15 = 0
    total_distance_ns_15_30 = 0
    total_distance_ns_gt_30 = 0
    total_distance_ew_0_15 = 0
    total_distance_ew_15_30 = 0
    total_distance_ew_gt_30 = 0

    # Calculate total distance for NS direction
    for detector_id in detector_phase_NS:
        for vehicle_id in ns_vehicles[detector_id]:
            distance = calculate_distance_based_on_lane_length(vehicle_id, intersection_position)
            if 0 <= distance <= 15:
                total_distance_ns_0_15 += distance
            elif 15 < distance <= 30:
                total_distance_ns_15_30 += distance
            else:
                total_distance_ns_gt_30 += distance

    # Calculate total distance for EW direction
    for detector_id in detector_phase_EW:
        for vehicle_id in ew_vehicles[detector_id]:
            distance = calculate_distance_based_on_lane_length(vehicle_id, intersection_position)
            if 0 <= distance <= 15:
                total_distance_ew_0_15 += distance
            elif 15 < distance <= 30:
                total_distance_ew_15_30 += distance
            else:
                total_distance_ew_gt_30 += distance

    # Convert to integer if necessary
    total_distance_ns_0_15 = int(total_distance_ns_0_15)
    total_distance_ns_15_30 = int(total_distance_ns_15_30)
    total_distance_ns_gt_30 = int(total_distance_ns_gt_30)
    total_distance_ew_0_15 = int(total_distance_ew_0_15)
    total_distance_ew_15_30 = int(total_distance_ew_15_30)
    total_distance_ew_gt_30 = int(total_distance_ew_gt_30)

    return (total_distance_ns_0_15, total_distance_ns_15_30, total_distance_ns_gt_30, 
            total_distance_ew_0_15, total_distance_ew_15_30, total_distance_ew_gt_30)


def average_waiting_time(detector_ids):
    """
    Calculates the average waiting time for vehicles detected by a list of lane area detectors.

    :param detector_ids: A list of lane area detector IDs.
    :return: The average waiting time for all detected vehicles.
    """
    total_waiting_time = 0.0
    total_vehicles = 0

    # Iterate over each detector ID
    for detector_id in detector_ids:
        # Get the list of vehicle IDs for the current detector
        vehicle_ids = traci.lanearea.getLastStepVehicleIDs(detector_id)

        # Sum up the waiting time for each detected vehicle and count the vehicles
        for vehicle_id in vehicle_ids:
            total_waiting_time += traci.vehicle.getAccumulatedWaitingTime(vehicle_id)
            total_vehicles += 1

    # Calculate the average waiting time
    if total_vehicles > 0:
        average_waiting_time = total_waiting_time / total_vehicles
    else:
        average_waiting_time = 0.0

    return average_waiting_time

def calculate_emissions(detector_ids):
    """
    Calculate total fuel consumption and CO2 emissions using lane area detectors in a SUMO simulation.

    Parameters:
    detector_ids (list): A list of detector IDs.

    Returns:
    tuple: A tuple containing total fuel consumption and total CO2 emissions.
    """
    total_fuel_consumption = 0.0
    total_co2_emission = 0.0
    
    for detector_id in detector_ids:
        # Retrieve the vehicle IDs for the current detector
        vehicle_ids = traci.lanearea.getLastStepVehicleIDs(detector_id)
        
        for vehicle_id in vehicle_ids:
            # Retrieve the fuel consumption and CO2 emission for each vehicle
            fuel_consumption = traci.vehicle.getFuelConsumption(vehicle_id)
            co2_emission = traci.vehicle.getCO2Emission(vehicle_id)
            
            # Accumulate the values
            total_fuel_consumption += fuel_consumption
            total_co2_emission += co2_emission
    
    return total_fuel_consumption, total_co2_emission


def get_average_speed(vehicle_ids):
    # Calculate the average speed of vehicles passing through the detectors
    total_speed = 0
    for vehicle_id in vehicle_ids:
        total_speed += traci.vehicle.getSpeed(vehicle_id)
    return total_speed / len(vehicle_ids) if vehicle_ids else 0

def estimate_travel_time(distance, vehicle_ids):
    # Estimate travel time based on distance and average speed of vehicles
    average_speed = get_average_speed(vehicle_ids)
    if average_speed > 0:
        return distance / average_speed
    else:
        return float('inf')  # Infinite time if speed is zero

def get_vehicle_ids(detector_ids):
    # Get the list of vehicle IDs detected by the specified detectors
    vehicle_ids = set()
    for detector_id in detector_ids:
        vehicle_ids.update(traci.lanearea.getLastStepVehicleIDs(detector_id))
    return list(vehicle_ids)

sumoBinary = "sumo-gui"
sumoCmd = [sumoBinary, "-c", "Data/EWTest.sumocfg", "--start"]
traci.start(sumoCmd)

lanes_in_WE1 =  ['E4_0','E4_1','E4_2','E5_0', 'E5_1','E5_2','-E8_0','-E8_1','-E8_2']
lanes_in_NS1 =  ['E24_0','E24_1','E24_2','E0_0', 'E0_1', 'E0_2']

detector_phase_EW1 = ["detector0","detector1","detector2","detector3","detector4","detector5"] 
detector_phase_NS1 =  ["detector6","detector7","detector8","detector9","detector10","detector11"]

lanes_in_WE2 = ['-E5_0','-E5_1','-E5_2','E8_0','E8_1','E8_2', 'E7_0','E7_1','E7_2','-E15_0','-E15_1','-E15_2']
lanes_in_NS2 = ['E25_0', 'E25_1', 'E25_2', 'E1_0','E1_1','E1_2']

detector_phase_EW2 = ["detector12","detector13","detector14","detector15","detector16","detector17"]  # Replace with your actual detector ID for phase 6
detector_phase_NS2 =  ["detector18","detector19","detector20","detector21","detector22","detector23"]  # Replace with your actual detector ID for phase 1

lanes_in_WE3 =  ['-E7_0','-E7_1','-E7_2','E15_0','E15_1','E15_2','E16_0','E16_1','E16_2']                
lanes_in_NS3 =  ['E2_0','E2_1','E2_2','E26_0','E26_1','E26_2']

detector_phase_EW3 =  ["detector24","detector25","detector26","detector27","detector28","detector29"]
detector_phase_NS3 =  ["detector30","detector31","detector32","detector33","detector34","detector35"]

lanes_in_WE4 = ['E29_0','E29_1', 'E29_2','-E28_0', '-E28_1', '-E28_2']
lanes_in_NS4 = ['-E24_0','-E24_1','-E24_2','E31_0','E31_1','E31_2']

detector_phase_EW4 = ["detector36","detector37","detector38","detector39","detector40","detector41"] 
detector_phase_NS4 =  ["detector42","detector43","detector44","detector45","detector46","detector47"]


lanes_in_WE5 = ['E28_0','E28_1','E28_2','-E27_0','-E27_1','-E27_2']
lanes_in_NS5 = ['-E25_0','-E25_1','-E25_2','E32_0','E32_1','E32_2']

detector_phase_EW5 = ["detector48","detector49","detector50","detector51","detector52","detector53"]
detector_phase_NS5 =  ["detector54","detector55","detector56","detector57","detector58","detector59"]

lanes_in_WE6 = ['E27_0','E27_1','E27_2','E30_0','E30_1','E30_2']
lanes_in_NS6 = ['-E26_0','-E26_1','-E26_2','E33_0','E33_1','E33_2']

detector_phase_EW6 = ["detector60","detector61","detector62","detector63","detector64","detector65"]
detector_phase_NS6 =  ["detector66","detector67","detector68","detector69","detector70","detector71"] 

total_vehicle_waiting_timer1 = 0
total_vehicle_waiting_timeg1 = 0
total_vehicle_waiting_timer2 = 0
total_vehicle_waiting_timeg2 = 0
total_vehicle_waiting_timer3 = 0
total_vehicle_waiting_timeg3 = 0
total_vehicle_waiting_timer4 = 0
total_vehicle_waiting_timeg4 = 0
total_vehicle_waiting_timer5 = 0
total_vehicle_waiting_timeg5 = 0
total_vehicle_waiting_timer6 = 0
total_vehicle_waiting_timeg6 = 0
#total_vehicle_waiting_timeg7 = 0
#total_vehicle_waiting_timer7 = 0

total_degree_heavy_traffic1= 0
total_degree_heavy_traffic2= 0
total_degree_heavy_traffic3= 0
total_degree_heavy_traffic4= 0
total_degree_heavy_traffic5= 0
total_degree_heavy_traffic6= 0

emv_waiting_time_red1 = 0
emv_waiting_time_green1 = 0
emv_waiting_time_red2 = 0
emv_waiting_time_green2 = 0
emv_waiting_time_red3 = 0
emv_waiting_time_green3 = 0
emv_waiting_time_red4 = 0
emv_waiting_time_green4 = 0
emv_waiting_time_red5 = 0
emv_waiting_time_green5 = 0
emv_waiting_time_red6 = 0
emv_waiting_time_green6 = 0
total_distance_R1 = 0
total_distance_G1 = 0
total_distance_R2 = 0
total_distance_G2 = 0
total_distance_R3 = 0
total_distance_G3 = 0
total_distance_R4 = 0
total_distance_G4 = 0
total_distance_R5 = 0
total_distance_G5 = 0
total_distance_R6 = 0
total_distance_G6 = 0
sum_avg_waiting_time_EW1 = 0.0
sum_avg_waiting_time_NS1 = 0.0
sum_avg_waiting_time_EW2 = 0.0
sum_avg_waiting_time_NS2 = 0.0
sum_avg_waiting_time_EW3 = 0.0
sum_avg_waiting_time_NS3 = 0.0
sum_avg_waiting_time_EW4 = 0.0
sum_avg_waiting_time_NS4 = 0.0
sum_avg_waiting_time_EW5 = 0.0
sum_avg_waiting_time_NS5 = 0.0
sum_avg_waiting_time_EW6 = 0.0
sum_avg_waiting_time_NS6 = 0.0

sum_fuel_consumption1 = 0.0
sum_co2_emission1 = 0.0
sum_fuel_consumption2 = 0.0
sum_co2_emission2 = 0.0
sum_fuel_consumption3 = 0.0
sum_co2_emission3 = 0.0
sum_fuel_consumption4 = 0.0
sum_co2_emission4 = 0.0
sum_fuel_consumption5 = 0.0
sum_co2_emission5 = 0.0
sum_fuel_consumption6 = 0.0
sum_co2_emission6 = 0.0

ns_green_duration1 = 0
ns_red_duration1 = 0
ew_green_duration1 = 0
ew_red_duration1 = 0

trafficLightID = traci.trafficlight.getIDList()[0]

no_stopped1 = []
no_moving1 = []
no_stopped2 = []
no_moving2 = []
no_stopped3 = []
no_moving3 = []
no_stopped4 = []
no_moving4 = []
no_stopped5 = []
no_moving5 = []
no_stopped6 = []
no_moving6 = []

step = 0
while step < 32000:
# while step < 100:
    # The get current lane the traffic light is passing
    #trafficLightID1 ='J0'
    #detectors_currently_moving1, detectors_stopped_by_light1 = get_lane_detectors(trafficLightID1)
    lanes_currently_moving1,lanes_stopped_by_light1  = get_lane_lists(lanes_in_WE1,lanes_in_NS1, trafficLightID)
    #lanes_stopped_by_light7,lanes_currently_moving7 = get_lane_lists2(lanes_in_NS1,  trafficLightID)
    lanes_currently_moving2, lanes_stopped_by_light2 = get_lane_lists(lanes_in_WE2,lanes_in_NS2, trafficLightID)
    lanes_currently_moving3, lanes_stopped_by_light3 = get_lane_lists(lanes_in_WE3,lanes_in_NS3, trafficLightID)
    lanes_currently_moving4, lanes_stopped_by_light4 = get_lane_lists(lanes_in_WE4,lanes_in_NS4, trafficLightID)
    lanes_currently_moving5, lanes_stopped_by_light5 = get_lane_lists(lanes_in_WE5,lanes_in_NS5, trafficLightID)
    lanes_currently_moving6, lanes_stopped_by_light6 = get_lane_lists(lanes_in_WE6,lanes_in_NS6, trafficLightID)
    
    #Intersection Position
    intersection_position1 = (50.85,136.62)
    trafficLightID1 = 'J0' 
    intersection_position2 = (148.99,139.22)
    trafficLightID2 = 'J4' 
    intersection_position3 = (259.74,140.21)
    trafficLightID3 = 'J13'
    intersection_position4 = (47.55,56.69)
    trafficLightID4 = 'J18'
    intersection_position5 = (151.90,58.77)
    trafficLightID5 = 'J19'
    intersection_position6 = (264.14,62.92)
    trafficLightID6 = 'J20'
    
    green_distance1, red_distance1 = calculate_vehicle_distances(intersection_position1,lanes_in_WE1, lanes_in_NS1, trafficLightID1)
    green_distance2, red_distance2 = calculate_vehicle_distances(intersection_position2,lanes_in_WE2, lanes_in_NS2, trafficLightID2)
    green_distance3, red_distance3 = calculate_vehicle_distances(intersection_position3,lanes_in_WE3, lanes_in_NS3, trafficLightID3)
    green_distance4, red_distance4 = calculate_vehicle_distances(intersection_position4,lanes_in_WE4, lanes_in_NS4, trafficLightID4)
    green_distance5, red_distance5 = calculate_vehicle_distances(intersection_position5,lanes_in_WE5, lanes_in_NS5, trafficLightID5)
    green_distance6, red_distance6 = calculate_vehicle_distances(intersection_position6,lanes_in_WE6, lanes_in_NS6, trafficLightID6)
    # Get cars in both lanes lane
    vehicles_in_red_lanes1 = get_vehicles_in_lane(lanes_stopped_by_light1)
    vehicles_in_green_lanes1 = get_vehicles_in_lane(lanes_currently_moving1)
    #vehicles_in_red_lanes7 = get_vehicles_in_lane(lanes_stopped_by_light1)
    #vehicles_in_green_lanes7 = get_vehicles_in_lane(lanes_currently_moving1)
    
    vehicles_in_red_lanes2 = get_vehicles_in_lane(lanes_stopped_by_light2)
    vehicles_in_green_lanes2 = get_vehicles_in_lane(lanes_currently_moving2)
    
    vehicles_in_red_lanes3 = get_vehicles_in_lane(lanes_stopped_by_light3)
    vehicles_in_green_lanes3 = get_vehicles_in_lane(lanes_currently_moving3)
    
    vehicles_in_red_lanes4 = get_vehicles_in_lane(lanes_stopped_by_light4)
    vehicles_in_green_lanes4 = get_vehicles_in_lane(lanes_currently_moving4)
    
    vehicles_in_red_lanes5 = get_vehicles_in_lane(lanes_stopped_by_light5)
    vehicles_in_green_lanes5 = get_vehicles_in_lane(lanes_currently_moving5)
    
    vehicles_in_red_lanes6 = get_vehicles_in_lane(lanes_stopped_by_light6)
    vehicles_in_green_lanes6 = get_vehicles_in_lane(lanes_currently_moving6)
    
    #Get Distance of vehicles far from intersection
    total_distance_G1 = green_distance1
    total_distance_R1 = red_distance1
    total_distance_R2 = red_distance2
    total_distance_G2 = green_distance2
    total_distance_R3 = red_distance3
    total_distance_G3 = green_distance3
    total_distance_R4 = red_distance4
    total_distance_G4 = green_distance4
    total_distance_R5 = red_distance5
    total_distance_G5 = green_distance5
    total_distance_R6 = red_distance6
    total_distance_G6 = green_distance6
    
    # Get waiting time of cars in green-light lane
    vehicles_waiting_timeg1 = vehicle_waiting_time_in_lane(vehicles_in_green_lanes1)
    if vehicles_waiting_timeg1 != 0:
         vehicles_waiting_timeg1.sort()
         max_waiting_time_in_green_lanes1 = vehicles_waiting_timeg1[-1]
         sum_wt_timeg1 = sum(vehicles_waiting_timeg1)
         total_vehicle_waiting_timeg1 += sum_wt_timeg1
 #        wt_vehicles.append(sum_wt_time)
    
    vehicles_waiting_timer1 =vehicle_waiting_time_in_lane(vehicles_in_red_lanes1)
    if vehicles_waiting_timer1 != 0:
        vehicles_waiting_timer1.sort()
        max_waiting_time_in_red_lanes1 = vehicles_waiting_timer1[-1]
        sum_wt_timer1 = sum(vehicles_waiting_timer1)
        total_vehicle_waiting_timer1 += sum_wt_timer1

   
    vehicles_waiting_timeg2 = vehicle_waiting_time_in_lane(vehicles_in_green_lanes2)
    if vehicles_waiting_timeg2 != 0:
          vehicles_waiting_timeg2.sort()
          max_waiting_time_in_green_lanes2 = vehicles_waiting_timeg2[-1]
          sum_wt_timeg2 = sum(vehicles_waiting_timeg2)
          total_vehicle_waiting_timeg2 += sum_wt_timeg2
   
    
    vehicles_waiting_timer2 = vehicle_waiting_time_in_lane(vehicles_in_red_lanes2)
    if vehicles_waiting_timer2 != 0:
     vehicles_waiting_timer2.sort()
     max_waiting_time_in_red_lanes2 = vehicles_waiting_timer2[-1]
     sum_wt_timer2 = sum(vehicles_waiting_timer2)
     total_vehicle_waiting_timer2 += sum_wt_timer2
     
    vehicles_waiting_timeg3 = vehicle_waiting_time_in_lane(vehicles_in_green_lanes3)
    if vehicles_waiting_timeg3 != 0:
         vehicles_waiting_timeg3.sort()
         max_waiting_time_in_green_lanes3 = vehicles_waiting_timeg3[-1]
         sum_wt_timeg3 = sum(vehicles_waiting_timeg3)
         total_vehicle_waiting_timeg3 += sum_wt_timeg3
  
   
    vehicles_waiting_timer3 = vehicle_waiting_time_in_lane(vehicles_in_red_lanes3)
    if vehicles_waiting_timer3 != 0:
       vehicles_waiting_timer3.sort()
       max_waiting_time_in_red_lanes3 = vehicles_waiting_timer3[-1]
       sum_wt_timer3 = sum(vehicles_waiting_timer3)
       total_vehicle_waiting_timer3 += sum_wt_timer3
   
    
    vehicles_waiting_timeg4 = vehicle_waiting_time_in_lane(vehicles_in_green_lanes4)
    if vehicles_waiting_timeg4 != 0:
        vehicles_waiting_timeg4.sort()
        max_waiting_time_in_green_lanes4 = vehicles_waiting_timeg4[-1]
        sum_wt_timeg4 = sum(vehicles_waiting_timeg4)
        total_vehicle_waiting_timeg4 += sum_wt_timeg4
 
  
    vehicles_waiting_timer4 = vehicle_waiting_time_in_lane(vehicles_in_red_lanes4)
    if vehicles_waiting_timer4 != 0:
       vehicles_waiting_timer4.sort()
       max_waiting_time_in_red_lanes4 = vehicles_waiting_timer4[-1]
       sum_wt_timer4 = sum(vehicles_waiting_timer4)
       total_vehicle_waiting_timer4 += sum_wt_timer4
    
    vehicles_waiting_timeg5 = vehicle_waiting_time_in_lane(vehicles_in_green_lanes5)
    if vehicles_waiting_timeg5 != 0:
        vehicles_waiting_timeg5.sort()
        max_waiting_time_in_green_lanes5 = vehicles_waiting_timeg5[-1]
        sum_wt_timeg5 = sum(vehicles_waiting_timeg5)
        total_vehicle_waiting_timeg5 += sum_wt_timeg5
 
  
    vehicles_waiting_timer5 = vehicle_waiting_time_in_lane(vehicles_in_red_lanes5)
    if vehicles_waiting_timer5 != 0:
       vehicles_waiting_timer5.sort()
       max_waiting_time_in_red_lanes5 = vehicles_waiting_timer5[-1]
       sum_wt_timer5 = sum(vehicles_waiting_timer5)
       total_vehicle_waiting_timer5 += sum_wt_timer5
       
    vehicles_waiting_timeg6 = vehicle_waiting_time_in_lane(vehicles_in_green_lanes6)
    if vehicles_waiting_timeg6 != 0:
        vehicles_waiting_timeg6.sort()
        max_waiting_time_in_green_lanes6 = vehicles_waiting_timeg6[-1]
        sum_wt_timeg6 = sum(vehicles_waiting_timeg6)
        total_vehicle_waiting_timeg6 += sum_wt_timeg6
 
  
    vehicles_waiting_timer6 = vehicle_waiting_time_in_lane(vehicles_in_red_lanes6)
    if vehicles_waiting_timer6 != 0:
       vehicles_waiting_timer6.sort()
       max_waiting_time_in_red_lanes6 = vehicles_waiting_timer6[-1]
       sum_wt_timer6 = sum(vehicles_waiting_timer6)
       total_vehicle_waiting_timer6 += sum_wt_timer6
          
       
     #Degree of heavy traffic in Red lanes
    heavy_traffic1 = len(vehicles_in_red_lanes1)
    total_degree_heavy_traffic1 += heavy_traffic1
    heavy_traffic2 = len(vehicles_in_red_lanes2)
    total_degree_heavy_traffic2 += heavy_traffic1
    heavy_traffic3 = len(vehicles_in_red_lanes3)
    total_degree_heavy_traffic3 += heavy_traffic3
    heavy_traffic4 = len(vehicles_in_red_lanes4)
    total_degree_heavy_traffic4 += heavy_traffic4
    heavy_traffic5 = len(vehicles_in_red_lanes5)
    total_degree_heavy_traffic5 += heavy_traffic5
    heavy_traffic6 = len(vehicles_in_red_lanes6)
    total_degree_heavy_traffic6 += heavy_traffic6
   

    # Get no of cars in both lane
    no_vehicles_in_red_lanes1 = len(vehicles_in_red_lanes1)
    no_vehicles_in_green_lanes1 = len(vehicles_in_green_lanes1)
    no_vehicles_in_red_lanes2 = len(vehicles_in_red_lanes2)
    no_vehicles_in_green_lanes2 = len(vehicles_in_green_lanes2)
    no_vehicles_in_red_lanes3 = len(vehicles_in_red_lanes3)
    no_vehicles_in_green_lanes3 = len(vehicles_in_green_lanes3)
    no_vehicles_in_red_lanes4 = len(vehicles_in_red_lanes4)
    no_vehicles_in_green_lanes4 = len(vehicles_in_green_lanes4)
    no_vehicles_in_red_lanes5 = len(vehicles_in_red_lanes5)
    no_vehicles_in_green_lanes5 = len(vehicles_in_green_lanes5)
    no_vehicles_in_red_lanes6 = len(vehicles_in_red_lanes6)
    no_vehicles_in_green_lanes6 = len(vehicles_in_green_lanes6)
    
    
    no_moving1.append(no_vehicles_in_green_lanes1)
    no_stopped1.append(no_vehicles_in_red_lanes1)
    no_moving2.append(no_vehicles_in_green_lanes2)
    no_stopped2.append(no_vehicles_in_red_lanes2)
    no_moving3.append(no_vehicles_in_green_lanes3)
    no_stopped3.append(no_vehicles_in_red_lanes3)
    no_moving4.append(no_vehicles_in_green_lanes4)
    no_stopped4.append(no_vehicles_in_red_lanes4)
    no_moving5.append(no_vehicles_in_green_lanes5)
    no_stopped5.append(no_vehicles_in_red_lanes5)
    no_moving6.append(no_vehicles_in_green_lanes6)
    no_stopped6.append(no_vehicles_in_red_lanes6)
    
    
    emv_waiting_time_red_lane1 = get_emv_waiting_time(vehicles_in_red_lanes1)
    emv_waiting_time_green_lane1 = get_emv_waiting_time(vehicles_in_green_lanes1)
    emv_waiting_time_red_lane2 = get_emv_waiting_time(vehicles_in_red_lanes2)
    emv_waiting_time_green_lane2 = get_emv_waiting_time(vehicles_in_green_lanes2)
    emv_waiting_time_red_lane3 = get_emv_waiting_time(vehicles_in_red_lanes3)
    emv_waiting_time_green_lane3 = get_emv_waiting_time(vehicles_in_green_lanes3)
    emv_waiting_time_red_lane4 = get_emv_waiting_time(vehicles_in_red_lanes4)
    emv_waiting_time_green_lane4 = get_emv_waiting_time(vehicles_in_green_lanes4)
    emv_waiting_time_red_lane5 = get_emv_waiting_time(vehicles_in_red_lanes5)
    emv_waiting_time_green_lane5 = get_emv_waiting_time(vehicles_in_green_lanes5)
    emv_waiting_time_red_lane6 = get_emv_waiting_time(vehicles_in_red_lanes6)
    emv_waiting_time_green_lane6 = get_emv_waiting_time(vehicles_in_green_lanes6)


    emv_waiting_time_red1 +=  emv_waiting_time_red_lane1
    emv_waiting_time_green1 +=  emv_waiting_time_green_lane1
    emv_waiting_time_red2 +=  emv_waiting_time_red_lane2
    emv_waiting_time_green2 +=  emv_waiting_time_green_lane2
    emv_waiting_time_red3 +=  emv_waiting_time_red_lane3
    emv_waiting_time_green3 +=  emv_waiting_time_green_lane3
    emv_waiting_time_red4 +=  emv_waiting_time_red_lane4
    emv_waiting_time_green4 +=  emv_waiting_time_green_lane4
    emv_waiting_time_red5 +=  emv_waiting_time_red_lane5
    emv_waiting_time_green5 +=  emv_waiting_time_green_lane5
    emv_waiting_time_red6 +=  emv_waiting_time_red_lane6
    emv_waiting_time_green6 +=  emv_waiting_time_green_lane6
    
    # Get emergency vehicles count
    emv_current_lane1 = get_emergencyCar(vehicles_in_green_lanes1)
    emv_other_lane1 = get_emergencyCar(vehicles_in_red_lanes1)
    emv_current_lane2 = get_emergencyCar(vehicles_in_green_lanes2)
    emv_other_lane2 = get_emergencyCar(vehicles_in_red_lanes2)
    emv_current_lane3 = get_emergencyCar(vehicles_in_green_lanes3)
    emv_other_lane3 = get_emergencyCar(vehicles_in_red_lanes3)
    emv_current_lane4 = get_emergencyCar(vehicles_in_green_lanes4)
    emv_other_lane4 = get_emergencyCar(vehicles_in_red_lanes4)
    emv_current_lane5 = get_emergencyCar(vehicles_in_green_lanes5)
    emv_other_lane5 = get_emergencyCar(vehicles_in_red_lanes5)
    emv_current_lane6 = get_emergencyCar(vehicles_in_green_lanes6)
    emv_other_lane6 = get_emergencyCar(vehicles_in_red_lanes6)
    
    no_emv_current_lane1 = len(emv_current_lane1)
    no_emv_other_lane1 = len(emv_other_lane1)
    no_emv_current_lane2 = len(emv_current_lane2)
    no_emv_other_lane2 = len(emv_other_lane2)
    no_emv_current_lane3 = len(emv_current_lane3)
    no_emv_other_lane3 = len(emv_other_lane3)
    no_emv_current_lane4 = len(emv_current_lane4)
    no_emv_other_lane4 = len(emv_other_lane4)
    no_emv_current_lane5 = len(emv_current_lane5)
    no_emv_other_lane5 = len(emv_other_lane5)
    no_emv_current_lane6 = len(emv_current_lane6)
    no_emv_other_lane6 = len(emv_other_lane6)
    
    
    if (step > 0) and (step % 8) == 0:
    # if (step>0):
        traffic_command1 = fuzzy_controller_function1(no_vehicles_in_red_lanes1,
                                                    no_vehicles_in_green_lanes1,
                                                    no_emv_current_lane1,no_emv_other_lane1,
                                                    max_waiting_time_in_green_lanes1, 
                                                    max_waiting_time_in_red_lanes1,
                                                    total_distance_R1,
                                                    total_distance_G1)
        
        traffic_command2 = fuzzy_controller_function1(no_vehicles_in_red_lanes2,
                                                    no_vehicles_in_green_lanes2,
                                                    no_emv_current_lane2, no_emv_other_lane2,
                                                    max_waiting_time_in_green_lanes2,
                                                    max_waiting_time_in_red_lanes2,
                                                    total_distance_R2,
                                                    total_distance_G2)
        
        traffic_command3 =fuzzy_controller_function1(no_vehicles_in_red_lanes3,
                                                    no_vehicles_in_green_lanes3,
                                                    no_emv_current_lane3,  no_emv_other_lane3,
                                                    max_waiting_time_in_green_lanes3, 
                                                    max_waiting_time_in_red_lanes3,
                                                    total_distance_R3,
                                                    total_distance_G3)
        
        traffic_command4 = fuzzy_controller_function1(no_vehicles_in_red_lanes4,
                                                    no_vehicles_in_green_lanes4,
                                                    no_emv_current_lane4,  no_emv_other_lane4,
                                                    max_waiting_time_in_green_lanes4,
                                                    max_waiting_time_in_red_lanes4,
                                                    total_distance_R4,
                                                    total_distance_G4) 
                                                            
        traffic_command5 = fuzzy_controller_function1(no_vehicles_in_red_lanes5,
                                                    no_vehicles_in_green_lanes5,
                                                    no_emv_current_lane5,  no_emv_other_lane5,
                                                    max_waiting_time_in_green_lanes5, 
                                                    max_waiting_time_in_red_lanes5,
                                                    total_distance_R5,
                                                    total_distance_G5) 
                                                            
        traffic_command6 = fuzzy_controller_function1(no_vehicles_in_red_lanes6,
                                                    no_vehicles_in_green_lanes6,
                                                    no_emv_current_lane6,  no_emv_other_lane6,
                                                    max_waiting_time_in_green_lanes6, 
                                                    max_waiting_time_in_red_lanes6,
                                                    total_distance_R6,
                                                    total_distance_G6) 
                                                                                                         

        
        if (traffic_command1 >= 0.5 ):
              
            detector_phase_EW1 = ["detector0","detector1","detector2","detector3","detector4","detector5"] 
            detector_phase_NS1 =  ["detector6","detector7","detector8","detector9","detector10","detector11"]
            #detector_NS1 = ["detector9","detector10","detector11"]
            #detector_EW1 = ["detector0","detector1","detector2"] 
            #detector for exchange information
            detector_SN4 =  ["detector42","detector43","detector44"]
            detector_WE2 = ["detector15","detector16","detector17"]
            # Get vehicle counts for both phases
            vehicle_count_phase_NS1 = get_total_vehicle_count(detector_phase_NS1)
            vehicle_count_phase_EW1 = get_total_vehicle_count(detector_phase_EW1)
            Waiting_time_phase_NS1 = vehicle_waiting_time(detector_phase_NS1)
            Waiting_time_phase_EW1 = vehicle_waiting_time(detector_phase_EW1)
            
            emergency_vehicles_NS1 = get_emergency_vehicles(detector_phase_NS1)
            emergency_vehicles_EW1 = get_emergency_vehicles(detector_phase_EW1)
            emergency_count_NS1 = len(emergency_vehicles_NS1)
            emergency_count_EW1 = len(emergency_vehicles_EW1)
            
            
            intersection_position1 = (50.85, 136.62)
            (distances_ns1_0_15, distances_ns1_15_30, distances_ns1_gt_30, 
             distances_ew1_0_15, distances_ew1_15_30, distances_ew1_gt_30) = calculate_vehicle_distances_from_detectors(intersection_position1, detector_phase_NS1, detector_phase_EW1)
            
            # Calculate Number of vehicles and estimated time arrival time of neigbour intersection
           
            # Get vehicle counts
            vehicle_count_WE2 = get_total_vehicle_count(detector_WE2)
            vehicle_count_SN4 = get_total_vehicle_count(detector_SN4)
         
            # Get vehicle IDs
            vehicle_ids_WE2 = get_vehicle_ids(detector_WE2)
            vehicle_ids_SN4 = get_vehicle_ids(detector_SN4)
         
            # Use lane length as distance between intersections
            distance_WE2_to_J0 = 153.71  # Example lane length from J0 to J18
            distance_SN4_to_J0 = 124.98  # Example lane length from J18 to J0
         
            # Estimate travel times
            travel_time_WE2_to_J0 = estimate_travel_time(distance_WE2_to_J0, vehicle_ids_WE2)
            travel_time_SN4_to_J0 = estimate_travel_time(distance_SN4_to_J0, vehicle_ids_SN4)
            
           
            current_phase1 = traci.trafficlight.getPhase("J0")
            remaining_phase_duration1 = traci.trafficlight.getPhaseDuration("J0") - traci.simulation.getTime()
            max_wait_time1 = 1
            if emergency_vehicles_NS1 or emergency_vehicles_EW1:
                   
                   # Set a maximum wait time for the emergency vehicle
                   
                   if current_phase1 in [0,1]:
                       # EW is green or yellow (transition phase)
                      if emergency_count_NS1 >= emergency_count_EW1:
                              # Prioritize NS direction
                             if remaining_phase_duration1 > max_wait_time1:
                                  traci.trafficlight.setPhaseDuration("J0", max_wait_time1)  # Change to NS green within 5 seconds
                      else:
                             # Extend EW green if there's an emergency vehicle passing
                             if current_phase1 == 0 and emergency_vehicles_EW1:
                                    traci.trafficlight.setPhaseDuration("J0", 60)  # Extend EW green
                             else:
                                   if remaining_phase_duration1 > max_wait_time1:
                                            traci.trafficlight.setPhaseDuration("J0", max_wait_time1)  # Change to NS green within 5 seconds
                   elif current_phase1 in [5, 6]:
                       # NS is green or yellow (transition phase)
                      if emergency_count_EW1 > emergency_count_NS1:
                             # Prioritize EW direction
                             if remaining_phase_duration1 > max_wait_time1:
                                      traci.trafficlight.setPhaseDuration("J0", max_wait_time1)  # Change to EW green within 5 seconds
                      else:
                          # Extend NS green if there's an emergency vehicle passing
                             if current_phase1 == 5 and emergency_vehicles_NS1:
                                 traci.trafficlight.setPhaseDuration("J0", 60)  # Extend NS green
                             else:
                                if remaining_phase_duration1 > max_wait_time1:
                                    traci.trafficlight.setPhaseDuration("J0", max_wait_time1)  # Change to EW green within 5 seconds
                  
                
            else:
                
                  # Determine NS direction phase and duration
                    if vehicle_count_phase_NS1 >= 20 and vehicle_count_phase_EW1 < 20:
                        if Waiting_time_phase_NS1 >=300 and Waiting_time_phase_EW1 < 300:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 350
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 345
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 340
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 200 < Waiting_time_phase_NS1 < 300  and Waiting_time_phase_EW1 < 200:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 335
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 330
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 325
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 150 < Waiting_time_phase_NS1 <= 200 and Waiting_time_phase_EW1 < 150:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 320
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 315
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 310
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 50 < Waiting_time_phase_NS1 <= 150 and Waiting_time_phase_EW1 < 50:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 305
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 300
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 295
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 0 < Waiting_time_phase_NS1 <= 50 and Waiting_time_phase_EW1 < 25:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 290
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 285
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 280
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            
                    elif vehicle_count_phase_EW1 >= 20 and vehicle_count_phase_NS1 < 20:
                        if Waiting_time_phase_EW1 >=300 and Waiting_time_phase_NS1 < 300:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 350
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 345
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 340
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1) 
                        elif 200 < Waiting_time_phase_EW1 < 300 and Waiting_time_phase_NS1 < 200:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 335
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 330
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 325
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1) 
                        elif 150 < Waiting_time_phase_EW1 <= 200 and Waiting_time_phase_NS1 < 150:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 320
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 315
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 310
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                        elif 50 < Waiting_time_phase_EW1 <= 150 and Waiting_time_phase_NS1 < 50: 
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 305
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 300
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 295
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                        elif 0 < Waiting_time_phase_EW1 <= 50 and Waiting_time_phase_NS1 < 25:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 290
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 285
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 280
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                                  
                    elif 15 < vehicle_count_phase_NS1 < 20 and vehicle_count_phase_EW1 < 15:
                        if Waiting_time_phase_NS1 >=300 and Waiting_time_phase_EW1 < 300:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 275
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 270
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 265
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 200 < Waiting_time_phase_NS1 < 300 and Waiting_time_phase_EW1 < 200:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 260
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 255
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 250
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 150 < Waiting_time_phase_NS1 <= 200 and Waiting_time_phase_EW1 < 150:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 245
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 240
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 235
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 50 < Waiting_time_phase_NS1 <= 150 and Waiting_time_phase_EW1 < 50:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 230
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 225
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 220
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 0 < Waiting_time_phase_NS1 <= 50 and Waiting_time_phase_EW1 < 25:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 215
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 210
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 205
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            
                    elif 15 < vehicle_count_phase_EW1 < 20 and vehicle_count_phase_NS1 < 15:
                        if Waiting_time_phase_EW1 >=300 and Waiting_time_phase_NS1 < 300:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 275
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 270
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 265
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)    
                        elif 200 < Waiting_time_phase_EW1 < 300 and Waiting_time_phase_NS1 < 200:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 260
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 255
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 250
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)   
                        elif 150 < Waiting_time_phase_EW1 <= 200 and Waiting_time_phase_NS1 < 150:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 245
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 240
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 235
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)   
                        elif 50 < Waiting_time_phase_EW1 <= 150 and Waiting_time_phase_NS1 < 50:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 230
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 225
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 220
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                        elif 0 < Waiting_time_phase_EW1 <= 50 and Waiting_time_phase_NS1 < 25:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 215
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 210
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 205
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                                
                    elif 10 < vehicle_count_phase_NS1 <= 15 and vehicle_count_phase_EW1 < 10:
                        if Waiting_time_phase_NS1 >=300 and Waiting_time_phase_EW1 < 300:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 200
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 195
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 190
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 200 < Waiting_time_phase_NS1 < 300 and Waiting_time_phase_EW1 < 200:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 185
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 180
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 175
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 150 < Waiting_time_phase_NS1 <= 200 and Waiting_time_phase_EW1 < 150:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 170
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 165
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 160
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 50 < Waiting_time_phase_NS1 <= 150 and Waiting_time_phase_EW1 < 50:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 155
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 150
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 145
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 0 < Waiting_time_phase_NS1 <= 50 and Waiting_time_phase_EW1 < 25:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 140
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 135
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 130
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                              
                    elif 10 < vehicle_count_phase_EW1 <= 15 and vehicle_count_phase_NS1 < 10:
                        if Waiting_time_phase_EW1 >=300 and Waiting_time_phase_NS1 < 300:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 200
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 195
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 190
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                        elif 200 < Waiting_time_phase_EW1 < 300 and Waiting_time_phase_NS1 < 200:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 185
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 180
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 175
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                        elif 150 < Waiting_time_phase_EW1 <= 200  and Waiting_time_phase_NS1 < 150:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 170
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 165
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 160
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                        elif 50 < Waiting_time_phase_EW1 <= 150 and Waiting_time_phase_NS1 < 50:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 155
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 150
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 145
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                        elif 0 < Waiting_time_phase_EW1 <= 50 and Waiting_time_phase_NS1 < 25: 
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 140
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 135
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 130
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            
                    elif 5 < vehicle_count_phase_NS1 <= 10 and vehicle_count_phase_EW1 < 5:
                        if Waiting_time_phase_NS1 >=300 and Waiting_time_phase_EW1 < 300:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 125
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 120
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 115
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 200 < Waiting_time_phase_NS1 < 300 and Waiting_time_phase_EW1 < 200:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 110
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 105
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 100
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 150 < Waiting_time_phase_NS1 <= 200 and Waiting_time_phase_EW1 < 150: 
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 95
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 90
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 85
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 50 < Waiting_time_phase_NS1 <= 150 and Waiting_time_phase_EW1 < 50:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 80
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 75
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 70
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 0 < Waiting_time_phase_NS1 <= 50 and Waiting_time_phase_EW1 < 25:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 65
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 60
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 55
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            
                       
                    elif 5 < vehicle_count_phase_EW1 <= 10 and vehicle_count_phase_NS1 < 5:
                        if Waiting_time_phase_EW1 >=300 and Waiting_time_phase_NS1 < 300:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 125
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 120
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 115
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                        elif 200 < Waiting_time_phase_EW1 < 300 and Waiting_time_phase_NS1 < 200:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 110
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 105
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 100
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                        elif 150 < Waiting_time_phase_EW1 <= 200 and Waiting_time_phase_NS1 < 150:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 95
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 90
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 85
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                        elif 50 < Waiting_time_phase_EW1 <= 150 and Waiting_time_phase_NS1 < 50: 
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 80
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 75
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 70
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                        elif 0 < Waiting_time_phase_EW1 <= 50 and Waiting_time_phase_NS1 < 25:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 65
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 60
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 55
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                          
                    elif 0 < vehicle_count_phase_NS1 <= 5 and vehicle_count_phase_EW1 < 3:
                        if Waiting_time_phase_NS1 >=300 and Waiting_time_phase_EW1 < 300:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 50
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 45
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 40
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 200 < Waiting_time_phase_NS1 < 300 and Waiting_time_phase_EW1 < 200: 
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 35
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 30
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 25
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 150 < Waiting_time_phase_NS1 <= 200 and Waiting_time_phase_EW1 < 150:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 20
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 15
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 10
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 50 < Waiting_time_phase_NS1 <= 150 and Waiting_time_phase_EW1 < 50:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 5
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 2
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 1
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                        elif 0 < Waiting_time_phase_NS1 <= 50 and Waiting_time_phase_EW1 < 25:
                            if distances_ns1_0_15 > distances_ew1_0_15:
                                ns_phase_duration1 = 0
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_15_30 > distances_ew1_15_30:
                                ns_phase_duration1 = 0
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                            elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                ns_phase_duration1 = 0
                                traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                                
                    elif 0 < vehicle_count_phase_EW1 <= 5 and vehicle_count_phase_NS1 < 3:
                        if Waiting_time_phase_EW1 >=300 and Waiting_time_phase_NS1 <300:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 50
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 45
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 40
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                        elif 200 < Waiting_time_phase_EW1 < 300 and Waiting_time_phase_NS1 < 200: 
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 35
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 30
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 25
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                        elif 150 < Waiting_time_phase_EW1 <= 200 and Waiting_time_phase_NS1 < 150:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 20
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 15
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 10
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                        elif 50 < Waiting_time_phase_EW1 <= 150 and Waiting_time_phase_NS1 < 50: 
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 5
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 2
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 1
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                        elif 0 < Waiting_time_phase_EW1 <= 50 and Waiting_time_phase_NS1 < 25:
                            if distances_ew1_0_15 > distances_ns1_0_15:
                                  ew_phase_duration1 = 0
                                  traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_15_30 > distances_ns1_15_30:
                                ew_phase_duration1 = 0
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                ew_phase_duration1 = 0
                                traci.trafficlight.setPhase("J0", 0)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ew_phase_duration1)
                            
        
                    elif 0 < vehicle_count_phase_NS1 <= 2 and vehicle_count_phase_EW1 > 2:
                             if Waiting_time_phase_NS1>= 200 and Waiting_time_phase_EW1 < 200:
                                 if distances_ns1_0_15 > distances_ew1_0_15:
                                      ns_phase_duration1 = 10
                                      traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                      traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                                 elif distances_ns1_15_30 > distances_ew1_15_30:
                                     ns_phase_duration1 = 6
                                     traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                     traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                                 elif distances_ns1_gt_30 > distances_ew1_gt_30:
                                     ns_phase_duration1 = 2
                                     traci.trafficlight.setPhase("J0", 5)  # NS direction green
                                     traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1)
                                     
                    elif 0 < vehicle_count_phase_EW1 <= 2 and vehicle_count_phase_NS1 > 2:
                             if Waiting_time_phase_EW1 >= 200 and Waiting_time_phase_NS1 < 200:
                                 if distances_ew1_0_15 > distances_ns1_0_15:
                                      ew_phase_duration1 = 10
                                      traci.trafficlight.setPhase("J0", 0)  # NS direction green
                                      traci.trafficlight.setPhaseDuration("J0", traffic_command1 +  ew_phase_duration1) 
                                 elif distances_ew1_15_30 > distances_ns1_15_30:
                                     ew_phase_duration1 = 6
                                     traci.trafficlight.setPhase("J0", 0)  # NS direction green
                                     traci.trafficlight.setPhaseDuration("J0", traffic_command1 +  ew_phase_duration1) 
                                 elif distances_ew1_gt_30 > distances_ns1_gt_30:
                                     ew_phase_duration1 = 2
                                     traci.trafficlight.setPhase("J0", 0)  # NS direction green
                                     traci.trafficlight.setPhaseDuration("J0", traffic_command1 +  ew_phase_duration1)   
                                     
                    elif vehicle_count_SN4 > vehicle_count_WE2:
                        if travel_time_SN4_to_J0 < travel_time_WE2_to_J0:
                            ns_phase_duration1 = 25
                            traci.trafficlight.setPhase("J0", 5)  # NS direction green
                            traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1) 
                        elif travel_time_SN4_to_J0 <= travel_time_WE2_to_J0: 
                             ns_phase_duration1 = 20
                             traci.trafficlight.setPhase("J0", 5)  # NS direction green
                             traci.trafficlight.setPhaseDuration("J0", traffic_command1 + ns_phase_duration1) 
                    elif vehicle_count_WE2 > vehicle_count_SN4:
                         if travel_time_WE2_to_J0 < travel_time_SN4_to_J0:
                             ew_phase_duration1 = 25
                             traci.trafficlight.setPhase("J0", 0)  # NS direction green
                             traci.trafficlight.setPhaseDuration("J0", traffic_command1 +  ew_phase_duration1) 
                         elif travel_time_WE2_to_J0 <= travel_time_SN4_to_J0: 
                              ew_phase_duration1 = 20
                              traci.trafficlight.setPhase("J0", 0)  # NS direction green
                              traci.trafficlight.setPhaseDuration("J0", traffic_command1 +  ew_phase_duration1)   
                        
                    else: 
                         traci.trafficlight.setProgram("J0", "0")
                   
                   
                    
            # Calculate average waiting time for each phas
            avg_waiting_time_EW1 = average_waiting_time(detector_phase_EW1)
            avg_waiting_time_NS1 = average_waiting_time(detector_phase_NS1)
            
            #if avg_waiting_time_EW1 != 0 or avg_waiting_time_NS1 != 0:
            sum_avg_waiting_time_EW1 += avg_waiting_time_EW1
            sum_avg_waiting_time_NS1 += avg_waiting_time_NS1
            
            fuel_consumption_EW1, co2_emission_EW1 = calculate_emissions(detector_phase_EW1)
            fuel_consumption_NS1, co2_emission_NS1 = calculate_emissions(detector_phase_NS1)
            
            sum_fuel_consumption1 +=  fuel_consumption_EW1 + fuel_consumption_NS1
            sum_co2_emission1 +=co2_emission_EW1 + co2_emission_NS1
            
            # Retrieve the current phase of the traffic light
            current_phase = traci.trafficlight.getPhase("J0")
            # Retrieve the duration of the current phase
            current_phase_duration = traci.trafficlight.getPhaseDuration("J0")
            # Determine if the current phase is green or red
            # Assuming phase 5 is green for NS direction as per your example
            #Print the current durations for debugging
            tlid = "J0"
            # Count vehicles for EW and NS directions
            vehicle_count_EW1 = sum(traci.lanearea.getLastStepVehicleNumber(detector) for detector in detector_phase_EW1)
            vehicle_count_NS1 = sum(traci.lanearea.getLastStepVehicleNumber(detector) for detector in detector_phase_NS1)
            current_phase_index = traci.trafficlight.getPhase(tlid)
            # Get the current phase duration
            current_phase_duration = traci.trafficlight.getPhaseDuration(tlid)
            #print("Current Phase Duration =",current_phase_duration)
            #Update durations based on the current phase
            if current_phase_index == 5:  # NS direction phase
                ns_green_duration1 += current_phase_duration
                ew_red_duration1 += current_phase_duration
            elif current_phase_index == 0:  # EW direction phase
                ew_green_duration1 += current_phase_duration
                ns_red_duration1 += current_phase_duration
            print(f"Step {step}: NS Green: {ns_green_duration1}, NS Red: {ns_red_duration1}, EW Green: {ew_green_duration1}, EW Red: {ew_red_duration1}, Vehicles NS: {vehicle_count_NS1}, Vehicles EW: {vehicle_count_EW1}")
                   

        if (traffic_command2 >= 0.5 ):
            detector_phase_EW2 = ["detector12","detector13","detector14","detector15","detector16","detector17"]  # Replace with your actual detector ID for phase 6
            detector_phase_NS2 =  ["detector18","detector19","detector20","detector21","detector22","detector23"]  # Replace with your actual detector ID for phase 1
            #detector_NS2 = ["detector18","detector19","detector20"] 
            #detector_WE2 = ["detector15","detector16","detector17"]
            
            #Detector list for exchange information
            detector_EW1 = ["detector0","detector1","detector2"] 
            detector_WE3 = ["detector24","detector25","detector26"]
            detector_SN5 =  ["detector54","detector55","detector56"]
            
            # Get vehicle counts for both phases
            vehicle_count_phase_NS2 = get_total_vehicle_count(detector_phase_NS2)
            vehicle_count_phase_EW2 = get_total_vehicle_count(detector_phase_EW2)
            Waiting_time_phase_NS2 = vehicle_waiting_time(detector_phase_NS2)
            Waiting_time_phase_EW2 = vehicle_waiting_time(detector_phase_EW2)
            
            emergency_vehicles_NS2 = get_emergency_vehicles(detector_phase_NS2)
            emergency_vehicles_EW2 = get_emergency_vehicles(detector_phase_EW2)
            emergency_count_NS2 = len(emergency_vehicles_NS2)
            emergency_count_EW2 = len(emergency_vehicles_EW2)
            
           
            intersection_position2 = (148.99,139.22)
            (distances_ns2_0_15, distances_ns2_15_30, distances_ns2_gt_30, 
             distances_ew2_0_15, distances_ew2_15_30, distances_ew2_gt_30) = calculate_vehicle_distances_from_detectors(intersection_position2, detector_phase_NS2, detector_phase_EW2)
           
            
            # Calculate Number of vehicles and estimated time arrival time of neigbour intersection
           
            # Get vehicle counts
            vehicle_count_EW1 = get_total_vehicle_count(detector_EW1)
            vehicle_count_WE3 = get_total_vehicle_count(detector_WE3)
            vehicle_count_SN5 = get_total_vehicle_count(detector_SN4)
            Tot_Vehicle_count_EW13 = vehicle_count_EW1 + vehicle_count_WE3
            # Get vehicle IDs
            vehicle_ids_EW1 = get_vehicle_ids(detector_EW1)
            vehicle_ids_WE3 = get_vehicle_ids(detector_WE3)
            vehicle_ids_SN5 = get_vehicle_ids(detector_SN5)
         
            # Use lane length as distance between intersections
            distance_EW1_to_J4 = 126.51  
            distance_WE3_to_J4 = 133.52
            distance_SN5_to_J4 = 123.91  
         
            # Estimate travel times
            travel_time_EW1_to_J4 = estimate_travel_time(distance_EW1_to_J4, vehicle_ids_EW1)
            travel_time_WE3_to_J4 = estimate_travel_time(distance_WE3_to_J4, vehicle_ids_WE3)
            travel_time_SN5_to_J4 = estimate_travel_time(distance_SN5_to_J4,vehicle_ids_SN5)
            Tot_travel_time_EW13_to_J4 = travel_time_EW1_to_J4 + travel_time_WE3_to_J4
            
            current_phase2 = traci.trafficlight.getPhase("J4")
            remaining_phase_duration2 = traci.trafficlight.getPhaseDuration("J4") - traci.simulation.getTime()
            max_wait_time2 = 1
            if emergency_vehicles_NS2 or emergency_vehicles_EW2:
                   #remaining_phase_duration2 = traci.trafficlight.getPhaseDuration("J4")
                   # Set a maximum wait time for the emergency vehicle
                   #max_wait_time2 = 3
                   if current_phase2 in [5,6]:
                      
                       # EW is green or yellow (transition phase)
                      if emergency_count_NS2 >= emergency_count_EW2:
                          # Prioritize NS direction
                         if remaining_phase_duration2 > max_wait_time2:
                              traci.trafficlight.setPhaseDuration("J4", max_wait_time2)  # Change to NS green within 5 seconds
                      else:
                         # Extend EW green if there's an emergency vehicle passing
                           if current_phase2 == 5 and emergency_vehicles_EW2:
                                 traci.trafficlight.setPhaseDuration("J4", 60)  # Extend EW green
                           else:
                               if remaining_phase_duration2 > max_wait_time2:
                                        traci.trafficlight.setPhaseDuration("J4", max_wait_time2)  # Change to NS green within 5 seconds
                   elif current_phase2 in [0, 1]:
                       # NS is green or yellow (transition phase)
                      if emergency_count_EW2 > emergency_count_NS2:
                             # Prioritize EW direction
                            if remaining_phase_duration2 > max_wait_time2:
                                      traci.trafficlight.setPhaseDuration("J4", max_wait_time2)  # Change to EW green within 5 seconds
                      else:
                          # Extend NS green if there's an emergency vehicle passing
                           if current_phase2 == 0 and emergency_vehicles_NS2:
                                 traci.trafficlight.setPhaseDuration("J4", 60)  # Extend NS green
                           else:
                               
                              if remaining_phase_duration2 > max_wait_time2:
                                    traci.trafficlight.setPhaseDuration("J4", max_wait_time2)  # Change to EW green within 5 seconds
       
            else:
                      
                      if vehicle_count_phase_NS2 >= 20 and vehicle_count_phase_EW2 < 20:
                          if Waiting_time_phase_NS2 >=300 and Waiting_time_phase_EW2 < 300:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 150
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 145
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 140
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 200 < Waiting_time_phase_NS2 < 300 and Waiting_time_phase_EW2 < 200:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 130
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 125
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 120
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 150 < Waiting_time_phase_NS2 <= 200 and Waiting_time_phase_EW2 < 150:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 115
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 110
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 100
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 50 < Waiting_time_phase_NS2 <=150 and Waiting_time_phase_EW2 < 50:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 95
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 90
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 85
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 0 < Waiting_time_phase_NS2 <=50 and Waiting_time_phase_EW2 < 25:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 80
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 70
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 65
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                                  
                      elif vehicle_count_phase_EW2 >= 20 and vehicle_count_phase_NS2 < 20:
                          if Waiting_time_phase_EW2 >=300 and Waiting_time_phase_NS2 < 300:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 150
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 145
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 140
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 200 < Waiting_time_phase_EW2 < 300 and Waiting_time_phase_NS2 < 200:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 130
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 125
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 120
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 150 < Waiting_time_phase_EW2 <=200 and Waiting_time_phase_NS2 < 150:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 110
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 105
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 100
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 50 < Waiting_time_phase_EW2 <=150 and Waiting_time_phase_NS2 < 50:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 90
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 85
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 80
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 0 < Waiting_time_phase_EW2 <=50 and Waiting_time_phase_NS2 < 25:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 75
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 70
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 65
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                             
                      elif 15 < vehicle_count_phase_NS2 < 20 and vehicle_count_phase_EW2 < 15:
                          if Waiting_time_phase_NS2 >=300 and Waiting_time_phase_EW2 < 300:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 80
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 75
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 70
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 200 < Waiting_time_phase_NS2 < 300 and Waiting_time_phase_EW2 < 200:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 75
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 70
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 65
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 150 < Waiting_time_phase_NS2 <= 200 and Waiting_time_phase_EW2 < 150:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 65
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 60
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 55
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 50 < Waiting_time_phase_NS2 <=150 and Waiting_time_phase_EW2 < 50:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 55
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 50
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 45
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 0 < Waiting_time_phase_NS2 <=50 and Waiting_time_phase_EW2 < 25: 
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 45
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 40
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 35
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                                  
                      elif 15 < vehicle_count_phase_EW2 < 20 and vehicle_count_phase_NS2 < 15:
                          if  Waiting_time_phase_EW2 >=300 and Waiting_time_phase_NS2 < 300:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 80
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 75
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 70
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 200 < Waiting_time_phase_EW2 < 300 and Waiting_time_phase_NS2 < 200:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 75
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 70
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 65
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 150 < Waiting_time_phase_EW2 <=200 and Waiting_time_phase_NS2 < 150:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 65
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 60
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 55
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 50 < Waiting_time_phase_EW2 <=150 and Waiting_time_phase_NS2 < 50:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 55
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 50
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 45
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 0 < Waiting_time_phase_EW2 <=50 and Waiting_time_phase_NS2 < 25:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 45
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 40
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 35
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                                   
                      elif 10 < vehicle_count_phase_NS2 <= 15 and vehicle_count_phase_EW2 < 10:
                          if Waiting_time_phase_NS2 >=300 and Waiting_time_phase_EW2 < 300:
                              if distances_ns2_0_15 >  distances_ew2_0_15:
                                  ns_phase_duration2 = 40
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 35
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 30
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 200 < Waiting_time_phase_NS2 < 300 and Waiting_time_phase_EW2 < 200:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 30
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 25
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 20
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 150 < Waiting_time_phase_NS2 <= 200 and Waiting_time_phase_EW2 < 150:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 25
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 20
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 15
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 50 < Waiting_time_phase_NS2 <=150 and Waiting_time_phase_EW2 < 50:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 20
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 15
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 10
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 0 < Waiting_time_phase_NS2 <=50 and Waiting_time_phase_EW2 < 25: 
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 15
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 10
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 5
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                                  
                      elif 10 < vehicle_count_phase_EW2 <= 15 and vehicle_count_phase_NS2 < 10:
                          if  Waiting_time_phase_EW2 >=300 and Waiting_time_phase_NS2 < 300:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 40
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 35
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 30
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 200 < Waiting_time_phase_EW2 < 300 and Waiting_time_phase_NS2 < 200:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 30
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 25
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 20
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 150 < Waiting_time_phase_EW2 <=200 and Waiting_time_phase_NS2 < 150:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 25
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 20
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 15
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 50 < Waiting_time_phase_EW2 <=150 and Waiting_time_phase_NS2 < 50: 
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 20
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 15
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 10
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 0 < Waiting_time_phase_EW2 <=50 and Waiting_time_phase_NS2 < 25:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 15
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 10
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 5
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                            
                      elif 5 < vehicle_count_phase_NS2 <= 10 and vehicle_count_phase_EW2 < 5:
                          if Waiting_time_phase_NS2 >=300 and Waiting_time_phase_EW2 < 300:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 25
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 20
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 15
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 200 < Waiting_time_phase_NS2 < 300 and Waiting_time_phase_EW2 < 200:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 20
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 15
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 10
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 150 < Waiting_time_phase_NS2 <= 200 and Waiting_time_phase_EW2 < 150:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 15
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 10
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 5
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 50 < Waiting_time_phase_NS2 <=150 and Waiting_time_phase_EW2 < 50:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 10
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 5
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 4
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 0 < Waiting_time_phase_NS2 <=50 and Waiting_time_phase_EW2 < 25: 
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 5
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 4
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 3
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              
                      elif 5 < vehicle_count_phase_EW2 <= 10 and vehicle_count_phase_NS2 < 5:
                          if  Waiting_time_phase_EW2 >=300 and Waiting_time_phase_NS2 < 300:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 25
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 20
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 15
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 200 < Waiting_time_phase_EW2 < 300 and Waiting_time_phase_NS2 < 200:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 20
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 15
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 10
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 150 < Waiting_time_phase_EW2 <=200 and Waiting_time_phase_NS2 < 150:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 15
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 10
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 5
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 50 < Waiting_time_phase_EW2 <=150 and Waiting_time_phase_NS2 < 50: 
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 10
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 5
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 4
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 0 < Waiting_time_phase_EW2 <=50 and Waiting_time_phase_NS2 < 25:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 5
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 4
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 3
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              
                      elif 0 < vehicle_count_phase_NS2 <= 5 and vehicle_count_phase_EW2 < 3:
                          if Waiting_time_phase_NS2 >=300 and Waiting_time_phase_EW2 < 300:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 15
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 10
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 8
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 200 < Waiting_time_phase_NS2 < 300 and Waiting_time_phase_EW2 < 200:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 10
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 8
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 6
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 150 < Waiting_time_phase_NS2 <= 200 and Waiting_time_phase_EW2 < 150: 
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 8
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 6
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 4
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 50 < Waiting_time_phase_NS2 <=150 and Waiting_time_phase_EW2 < 50:
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 6
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 4
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 3
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                          elif 0 < Waiting_time_phase_NS2 <=50 and Waiting_time_phase_EW2 < 25: 
                              if distances_ns2_0_15 > distances_ew2_0_15:
                                  ns_phase_duration2 = 5
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_15_30 > distances_ew2_15_30:
                                  ns_phase_duration2 = 4
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                              elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                  ns_phase_duration2 = 3
                                  traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                                
                      elif 0 < vehicle_count_phase_EW2 <= 5 and vehicle_count_phase_NS2 < 3:
                          if  Waiting_time_phase_EW2 >=300 and Waiting_time_phase_NS2 < 300:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 15
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 10
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 8
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 200 < Waiting_time_phase_EW2 < 300 and Waiting_time_phase_NS2 < 200:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 10
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 8
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 6
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 150 < Waiting_time_phase_EW2 <=200 and Waiting_time_phase_NS2 < 150:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 8
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 6
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 4
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 50 < Waiting_time_phase_EW2 <=150 and Waiting_time_phase_NS2 < 50:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 6
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 5
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 4
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                          elif 0 < Waiting_time_phase_EW2 <=50 and Waiting_time_phase_NS2 < 25:
                              if distances_ew2_0_15 > distances_ns2_0_15:
                                  ew_phase_duration2 = 4
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_15_30 > distances_ns2_15_30:
                                  ew_phase_duration2 = 3
                                  traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                              elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                   ew_phase_duration2 = 2
                                   traci.trafficlight.setPhase("J4", 5)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ew_phase_duration2)
                      
                      elif 0 < vehicle_count_phase_NS2 <= 2 and vehicle_count_phase_EW2 > 2:
                               if Waiting_time_phase_NS2>= 200 and Waiting_time_phase_EW2 < 200:
                                   if distances_ns2_0_15 > distances_ew2_0_15:
                                        ns_phase_duration2 = 10
                                        traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                        traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                                   elif distances_ns2_15_30 > distances_ew2_15_30:
                                       ns_phase_duration2 = 6
                                       traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                       traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                                   elif distances_ns2_gt_30 > distances_ew2_gt_30:
                                       ns_phase_duration2 = 2
                                       traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                       traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                                       
                      elif 0 < vehicle_count_phase_EW2 <= 2 and vehicle_count_phase_NS2 > 2:
                               if Waiting_time_phase_EW2 >= 200 and  Waiting_time_phase_NS2 < 200:
                                   if distances_ew2_0_15 > distances_ns2_0_15:
                                        ew_phase_duration2 = 10
                                        traci.trafficlight.setPhase("J4", 5)  # NS direction green
                                        traci.trafficlight.setPhaseDuration("J4", traffic_command2 +  ew_phase_duration2) 
                                   elif distances_ew2_15_30 > distances_ns2_15_30:
                                       ew_phase_duration2 = 6
                                       traci.trafficlight.setPhase("J4", 5)  # NS direction green
                                       traci.trafficlight.setPhaseDuration("J4", traffic_command2 +  ew_phase_duration2) 
                                   elif distances_ew2_gt_30 > distances_ns2_gt_30:
                                       ew_phase_duration2 = 2
                                       traci.trafficlight.setPhase("J4", 5)  # NS direction green
                                       traci.trafficlight.setPhaseDuration("J4", traffic_command2 +  ew_phase_duration2) 
                                       
                      elif vehicle_count_SN5 > Tot_Vehicle_count_EW13:
                            if travel_time_SN5_to_J4 < Tot_travel_time_EW13_to_J4:
                                ns_phase_duration2 = 25
                                traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                            elif travel_time_SN5_to_J4 <= Tot_travel_time_EW13_to_J4: 
                                 ns_phase_duration2 = 20
                                 traci.trafficlight.setPhase("J4", 0)  # NS direction green
                                 traci.trafficlight.setPhaseDuration("J4", traffic_command2 + ns_phase_duration2)
                      elif Tot_Vehicle_count_EW13 < vehicle_count_SN5:
                             if Tot_travel_time_EW13_to_J4  > travel_time_SN5_to_J4:
                                 ew_phase_duration2 = 25
                                 traci.trafficlight.setPhase("J4", 5)  # NS direction green
                                 traci.trafficlight.setPhaseDuration("J4", traffic_command2 +  ew_phase_duration2) 
                             elif Tot_travel_time_EW13_to_J4  <= travel_time_SN5_to_J4: 
                                  ew_phase_duration2 = 20
                                  traci.trafficlight.setPhase("J4", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J4", traffic_command2 +  ew_phase_duration2)  
                      else:
                         traci.trafficlight.setProgram("J4", "0")  
                      
                        
                    
            # Calculate average waiting time for each phas
            avg_waiting_time_EW2 = average_waiting_time(detector_phase_EW2)
            avg_waiting_time_NS2 = average_waiting_time(detector_phase_NS2)
            
            #if avg_waiting_time_EW1 != 0 or avg_waiting_time_NS1 != 0:
            sum_avg_waiting_time_EW2 += avg_waiting_time_EW2
            sum_avg_waiting_time_NS2 += avg_waiting_time_NS2
            
            fuel_consumption_EW2, co2_emission_EW2 = calculate_emissions(detector_phase_EW2)
            fuel_consumption_NS2, co2_emission_NS2 = calculate_emissions(detector_phase_NS2)  
            
            sum_fuel_consumption2 +=  fuel_consumption_EW2 + fuel_consumption_NS2
            sum_co2_emission2 +=co2_emission_EW2 + co2_emission_NS2
                    
        if (traffic_command3 >= 0.5 ):
            detector_phase_EW3 =  ["detector24","detector25","detector26","detector27","detector28","detector29"]
            detector_phase_NS3 =  ["detector30","detector31","detector32","detector33","detector34","detector35"] # Replace with your actual detector ID for phase 6
            #detector for exchange traffic data
            detector_EW2=["detector12","detector13","detector14"]
            detector_SN6 = ["detector66","detector67","detector68"]
            # Get vehicle counts for both phases
            vehicle_count_phase_NS3 = get_total_vehicle_count(detector_phase_NS3)
            vehicle_count_phase_EW3 = get_total_vehicle_count( detector_phase_EW3)
            Waiting_time_phase_NS3 = vehicle_waiting_time(detector_phase_NS3)
            Waiting_time_phase_EW3 = vehicle_waiting_time(detector_phase_EW3)
            
            emergency_vehicles_NS3 = get_emergency_vehicles(detector_phase_NS3)
            emergency_vehicles_EW3 = get_emergency_vehicles(detector_phase_EW3)
            emergency_count_NS3 = len(emergency_vehicles_NS3)
            emergency_count_EW3 = len(emergency_vehicles_EW3)
            
            intersection_position3 = (259.74,140.21)
            (distances_ns3_0_15, distances_ns3_15_30, distances_ns3_gt_30, 
             distances_ew3_0_15, distances_ew3_15_30, distances_ew3_gt_30) = calculate_vehicle_distances_from_detectors(intersection_position3, detector_phase_NS3, detector_phase_EW3)
            
            # Get vehicle counts
            vehicle_count_EW2 = get_total_vehicle_count(detector_EW2)
            vehicle_count_SN6 = get_total_vehicle_count(detector_SN6)
           
            # Get vehicle IDs
            vehicle_ids_EW2 = get_vehicle_ids(detector_EW2)
            vehicle_ids_SN6 = get_vehicle_ids(detector_SN6)
         
            # Use lane length as distance between intersections
            distance_EW2_to_J13 = 153.71  
            distance_SN6_to_J13 = 122.12  
         
            # Estimate travel times
            travel_time_EW2_to_J13 = estimate_travel_time(distance_EW2_to_J13, vehicle_ids_EW2)
            travel_time_SN6_to_J13 = estimate_travel_time(distance_SN6_to_J13, vehicle_ids_SN6)
           
            
            current_phase3 = traci.trafficlight.getPhase("J13")
            remaining_phase_duration3 = traci.trafficlight.getPhaseDuration("J13") - traci.simulation.getTime()
            max_wait_time3 = 1
            if emergency_vehicles_NS3 or emergency_vehicles_EW3:
                   #remaining_phase_duration3 = traci.trafficlight.getPhaseDuration("J13")
                   # Set a maximum wait time for the emergency vehicle
                   #max_wait_time3 = 3
                   if current_phase3 in [0, 1]:
                       # EW is green or yellow (transition phase)
                      if emergency_count_NS3 >= emergency_count_EW3:
                          # Prioritize NS direction
                         if remaining_phase_duration3 > max_wait_time3:
                              traci.trafficlight.setPhaseDuration("J13", max_wait_time3)  # Change to NS green within 5 seconds
                      else:
                         # Extend EW green if there's an emergency vehicle passing
                           if current_phase3 == 0 and emergency_vehicles_EW3:
                                 traci.trafficlight.setPhaseDuration("J13", 60)  # Extend EW green
                           else:
                               if remaining_phase_duration3 > max_wait_time3:
                                        traci.trafficlight.setPhaseDuration("J13", max_wait_time3)  # Change to NS green within 5 seconds
                   elif current_phase3 in [5,6]:
                           # NS is green or yellow (transition phase)
                      if emergency_count_EW3 > emergency_count_NS3:
                                 # Prioritize EW direction
                         if remaining_phase_duration3 > max_wait_time3:
                                          traci.trafficlight.setPhaseDuration("J13", max_wait_time3)  # Change to EW green within 5 seconds
                      else:
                              # Extend NS green if there's an emergency vehicle passing
                         if current_phase3 == 5 and emergency_vehicles_NS3:
                                  traci.trafficlight.setPhaseDuration("J13", 60)  # Extend NS green
                         else:
                                  if remaining_phase_duration3 > max_wait_time3:
                                        traci.trafficlight.setPhaseDuration("J13", max_wait_time3)  # Change to EW green within 5 seconds            
                
            else:
                    # Determine NS direction phase and duration
                      if vehicle_count_phase_NS3 >= 20 and vehicle_count_phase_EW3 < 20:
                          if Waiting_time_phase_NS3 >=300 and Waiting_time_phase_EW3 < 300:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 150
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 145
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 140
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)  
                          elif 200 < Waiting_time_phase_NS3 < 300 and Waiting_time_phase_EW3 < 200:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 130
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 135
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 120
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3) 
                          elif 150 < Waiting_time_phase_NS3 <= 200 and Waiting_time_phase_EW3 < 150:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 110
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 105
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 100
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3) 
                          elif 50 < Waiting_time_phase_NS3 <= 150 and Waiting_time_phase_EW3 < 50:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 95
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 90
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 85
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3) 
                          elif 0 < Waiting_time_phase_NS3 <= 50 and Waiting_time_phase_EW3 < 25:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 80
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 75
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 70
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3) 
                               
                      elif vehicle_count_phase_EW3 >= 20 and vehicle_count_phase_NS3 < 20:
                          if Waiting_time_phase_EW3 >=300 and Waiting_time_phase_NS3 < 300:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 150
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 145
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 140
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 200 < Waiting_time_phase_EW3 < 300 and Waiting_time_phase_NS3 < 200:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 130
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 125
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 120
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 150 < Waiting_time_phase_EW3 <= 200 and Waiting_time_phase_NS3 < 150:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 110
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 105
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 100
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 50 < Waiting_time_phase_EW3 <= 150 and Waiting_time_phase_NS3 < 50:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 95
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 90
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 85
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 0 < Waiting_time_phase_EW3 <= 50 and Waiting_time_phase_NS3 < 25:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 80
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 75
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 70
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                                
                      elif 15 < vehicle_count_phase_NS3 < 20 and vehicle_count_phase_EW3 < 15:
                          if Waiting_time_phase_NS3 >=300 and Waiting_time_phase_EW3 < 300:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 90
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 85
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 80
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3) 
                          elif 200 < Waiting_time_phase_NS3 < 300 and Waiting_time_phase_EW3 < 200:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 75
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 70
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 65
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3) 
                          elif 150 < Waiting_time_phase_NS3 <= 200 and Waiting_time_phase_EW3 < 150:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 65
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 60
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 55
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3) 
                          elif 50 < Waiting_time_phase_NS3 <= 150 and Waiting_time_phase_EW3 < 50:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 55
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 50
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 45
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3) 
                          elif 0 < Waiting_time_phase_NS3 <= 50 and Waiting_time_phase_EW3 < 25:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 45
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 40
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 35
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3) 
                              
                      elif 15 < vehicle_count_phase_EW3 < 20 and vehicle_count_phase_NS3 < 15:
                          if  Waiting_time_phase_EW3 >=300 and Waiting_time_phase_NS3 < 300:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 95
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 90
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 85
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 200 < Waiting_time_phase_EW3 < 300 and Waiting_time_phase_NS3 < 200:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 80
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 75
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 70
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 150 < Waiting_time_phase_EW3 <= 200 and Waiting_time_phase_NS3 < 150:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 70
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 65
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 60
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 50 < Waiting_time_phase_EW3 <= 150 and Waiting_time_phase_NS3 < 50:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 60
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 55
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 50
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 0 < Waiting_time_phase_EW3 <= 50 and Waiting_time_phase_NS3 < 25:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 50
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 45
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 40
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                                  
                      elif 10 < vehicle_count_phase_NS3 <= 15 and vehicle_count_phase_EW3 < 10:
                          if Waiting_time_phase_NS3 >=300 and Waiting_time_phase_EW3 < 300:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 45
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 40
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 35
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3) 
                          elif 200 < Waiting_time_phase_NS3 < 300 and Waiting_time_phase_EW3 < 200:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 35
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 30
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 25
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3) 
                          elif 150 < Waiting_time_phase_NS3 <= 200 and Waiting_time_phase_EW3 < 150:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 25
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 20
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 15
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3) 
                          elif 50 < Waiting_time_phase_NS3 <= 150 and Waiting_time_phase_EW3 < 50:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 20
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 15
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 10
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3) 
                          elif 0 < Waiting_time_phase_NS3 <= 50 and Waiting_time_phase_EW3 < 25:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 15
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 10
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 8
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3) 
                                   
                      elif 10 < vehicle_count_phase_EW3 <= 15 and vehicle_count_phase_NS3 < 10:
                          if  Waiting_time_phase_EW3 >=300 and Waiting_time_phase_NS3 < 300:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 45
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 40
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 35
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 200 < Waiting_time_phase_EW3 < 300 and Waiting_time_phase_NS3 < 200:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 35
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 30
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 25
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 150 < Waiting_time_phase_EW3 <= 200 and Waiting_time_phase_NS3 < 150:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 25
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 20
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 15
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 50 < Waiting_time_phase_EW3 <= 150 and Waiting_time_phase_NS3 < 50:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 20
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 15
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 10
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 0 < Waiting_time_phase_EW3 <= 50 and Waiting_time_phase_NS3 < 25:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 15
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 10
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 8
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          
                      elif 5 < vehicle_count_phase_NS3 <= 10 and vehicle_count_phase_EW3 < 5:
                          if Waiting_time_phase_NS3 >=300 and Waiting_time_phase_EW3 < 300:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 25
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 20
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 15
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3) 
                          elif 200 < Waiting_time_phase_NS3 < 300 and Waiting_time_phase_EW3 < 200:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 20
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 15
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 12
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                          elif 150 < Waiting_time_phase_NS3 <= 200 and Waiting_time_phase_EW3 < 150:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 15
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 12
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 10
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                          elif 50 < Waiting_time_phase_NS3 <= 150 and Waiting_time_phase_EW3 < 50:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 13
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 11
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 10
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                          elif 0 < Waiting_time_phase_NS3 <= 50 and Waiting_time_phase_EW3 < 25:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 10
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 8
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 5
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                                   
                      elif 5 < vehicle_count_phase_EW3 <= 10 and vehicle_count_phase_NS3 < 5:
                          if  Waiting_time_phase_EW3 >=300 and  Waiting_time_phase_NS3 < 300:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 25
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 20
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 18
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 200 < Waiting_time_phase_EW3 < 300 and  Waiting_time_phase_NS3 < 200:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 20
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 18
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 15
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 150 < Waiting_time_phase_EW3 <= 200 and Waiting_time_phase_NS3 < 150:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 17
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 15
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 13
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 50 < Waiting_time_phase_EW3 <= 150 and Waiting_time_phase_NS3 < 50:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 12
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 10
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 8
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 0 < Waiting_time_phase_EW3 <= 50 and Waiting_time_phase_NS3 < 25:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 8
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 6
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 4
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                                  
                      elif 0 < vehicle_count_phase_NS3 <= 5 and vehicle_count_phase_EW3 < 3:
                          if Waiting_time_phase_NS3 >=300 and Waiting_time_phase_EW3 < 300:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 18
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 15
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 13
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                          elif 200 < Waiting_time_phase_NS3 < 300 and Waiting_time_phase_EW3 < 200:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 12
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 10
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 8
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                          elif 150 < Waiting_time_phase_NS3 <= 200 and Waiting_time_phase_EW3 < 150:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 7
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 5
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 3
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                          elif 50 < Waiting_time_phase_NS3 <= 150 and Waiting_time_phase_EW3 < 50:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 5
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 3
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 2
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                          elif 0 < Waiting_time_phase_NS3 <= 50 and Waiting_time_phase_EW3 < 25:
                              if distances_ns3_0_15 > distances_ew3_0_15:
                                  ns_phase_duration3 = 4
                                  traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_15_30 > distances_ew3_15_30:
                                   ns_phase_duration3 = 2
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                              elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                   ns_phase_duration3 = 1
                                   traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J13",  traffic_command3 + ns_phase_duration3)
                                   
                      elif 0 < vehicle_count_phase_EW3 <= 5 and vehicle_count_phase_NS3 < 3:
                          if  Waiting_time_phase_EW3 >=300 and Waiting_time_phase_NS3 < 300:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 18
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 16
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 15
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 200 < Waiting_time_phase_EW3 < 300 and Waiting_time_phase_NS3 < 200:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 13
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 11
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 10
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 150 < Waiting_time_phase_EW3 <= 200 and Waiting_time_phase_NS3 < 150:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 8
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 6
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 5
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 50 < Waiting_time_phase_EW3 <= 150 and Waiting_time_phase_NS3 < 50:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 6
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 4
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 3
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                          elif 0 < Waiting_time_phase_EW3 <= 50 and Waiting_time_phase_NS3 < 25:
                              if distances_ew3_0_15 > distances_ns3_0_15:
                                  ew_phase_duration3 = 4
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_15_30 > distances_ns3_15_30:
                                  ew_phase_duration3 = 3
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                              elif distances_ew3_gt_30 > distances_ns3_gt_30: 
                                  ew_phase_duration3 = 2
                                  traci.trafficlight.setPhase("J13", 0)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ew_phase_duration3)
                                  
                      elif 0 < vehicle_count_phase_NS3 <= 2 and vehicle_count_phase_EW3 > 2:
                              if Waiting_time_phase_NS3>= 200 and Waiting_time_phase_EW3 < 200:
                                  if distances_ns3_0_15 > distances_ew3_0_15:
                                       ns_phase_duration3 = 10
                                       traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                       traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ns_phase_duration3)
                                  elif distances_ns3_15_30 > distances_ew3_15_30:
                                      ns_phase_duration3 = 6
                                      traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                      traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ns_phase_duration3)
                                  elif distances_ns3_gt_30 > distances_ew3_gt_30:
                                      ns_phase_duration3 = 2
                                      traci.trafficlight.setPhase("J13", 5)  # NS direction green
                                      traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ns_phase_duration3)
                                      
                      elif 0 < vehicle_count_phase_EW3 <= 2 and vehicle_count_phase_NS3 > 2:
                              if Waiting_time_phase_EW3 >= 200 and  Waiting_time_phase_NS3 < 200:
                                  if distances_ew3_0_15 > distances_ns3_0_15:
                                       ew_phase_duration3 = 10
                                       traci.trafficlight.setPhase("J13", 0)  # NS direction green
                                       traci.trafficlight.setPhaseDuration("J13", traffic_command3 +  ew_phase_duration3) 
                                  elif distances_ew3_15_30 > distances_ns3_15_30:
                                      ew_phase_duration3 = 6
                                      traci.trafficlight.setPhase("J13", 0)  # NS direction green
                                      traci.trafficlight.setPhaseDuration("J13", traffic_command3 +  ew_phase_duration3) 
                                  elif distances_ew3_gt_30 > distances_ns3_gt_30:
                                      ew_phase_duration3 = 2
                                      traci.trafficlight.setPhase("J13", 0)  # NS direction green
                                      traci.trafficlight.setPhaseDuration("J13", traffic_command3 +  ew_phase_duration3)  
                                      
                      elif vehicle_count_SN6 > vehicle_count_EW2:
                          if  travel_time_SN6_to_J13 < travel_time_EW2_to_J13:
                              ns_phase_duration3 = 25
                              traci.trafficlight.setPhase("J13", 5)  # NS direction green
                              traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ns_phase_duration3)
                          elif travel_time_SN6_to_J13 <= travel_time_EW2_to_J13: 
                               ns_phase_duration3 = 20
                               traci.trafficlight.setPhase("J13", 5)  # NS direction green
                               traci.trafficlight.setPhaseDuration("J13", traffic_command3 + ns_phase_duration3)
                      elif  vehicle_count_EW2 > vehicle_count_SN6:
                           if travel_time_EW2_to_J13 < travel_time_SN6_to_J13:
                               ew_phase_duration3 = 25
                               traci.trafficlight.setPhase("J13", 0)  # NS direction green
                               traci.trafficlight.setPhaseDuration("J13", traffic_command3 +  ew_phase_duration3)  
                           elif travel_time_EW2_to_J13 <= travel_time_SN6_to_J13: 
                                ew_phase_duration3 = 20
                                traci.trafficlight.setPhase("J13", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J13", traffic_command3 +  ew_phase_duration3)   
                    
                      else: 
                          traci.trafficlight.setProgram("J13", "0")
                          
                            
            # Calculate average waiting time for each phas
            avg_waiting_time_EW3 = average_waiting_time(detector_phase_EW3)
            avg_waiting_time_NS3 = average_waiting_time(detector_phase_NS3)
             
             #if avg_waiting_time_EW1 != 0 or avg_waiting_time_NS1 != 0:
            sum_avg_waiting_time_EW3 += avg_waiting_time_EW3
            sum_avg_waiting_time_NS3 += avg_waiting_time_NS3
             
            fuel_consumption_EW3, co2_emission_EW3 = calculate_emissions(detector_phase_EW3)
            fuel_consumption_NS3, co2_emission_NS3 = calculate_emissions(detector_phase_NS3)
            
            sum_fuel_consumption3 +=  fuel_consumption_EW3 + fuel_consumption_NS3
            sum_co2_emission3 +=co2_emission_EW3 + co2_emission_NS3
                 
                     
        if (traffic_command4 >= 0.5 ):
            
            detector_phase_EW4 = ["detector36","detector37","detector38","detector39","detector40","detector41"] 
            detector_phase_NS4 =  ["detector42","detector43","detector44","detector45","detector46","detector47"] # Replace with your actual detector ID for phase 6
            #Detector for exchange traffic data
            detector_NS1 =  ["detector9","detector10","detector11"]
            detector_WE5 = ["detector51","detector52","detector53"]
            # Get vehicle counts for both phases
            vehicle_count_phase_NS4 = get_total_vehicle_count(detector_phase_NS4)
            vehicle_count_phase_EW4 = get_total_vehicle_count(detector_phase_EW4)
            Waiting_time_phase_NS4 = vehicle_waiting_time(detector_phase_NS4)
            Waiting_time_phase_EW4 = vehicle_waiting_time(detector_phase_EW4)
            
            emergency_vehicles_NS4 = get_emergency_vehicles(detector_phase_NS4)
            emergency_vehicles_EW4 = get_emergency_vehicles(detector_phase_EW4)
            emergency_count_NS4 = len(emergency_vehicles_NS4)
            emergency_count_EW4 = len(emergency_vehicles_EW4)
            
            intersection_position4 = (47.55,56.69)
            (distances_ns4_0_15, distances_ns4_15_30, distances_ns4_gt_30, 
             distances_ew4_0_15, distances_ew4_15_30, distances_ew4_gt_30) = calculate_vehicle_distances_from_detectors(intersection_position4, detector_phase_NS4, detector_phase_EW4)
            
            # Get vehicle counts
            vehicle_count_WE5 = get_total_vehicle_count(detector_WE5)
            vehicle_count_NS1 = get_total_vehicle_count(detector_NS1)
           
            # Get vehicle IDs
            vehicle_ids_WE5 = get_vehicle_ids(detector_WE5)
            vehicle_ids_NS1 = get_vehicle_ids(detector_NS1)
         
            # Use lane length as distance between intersections
            distance_WE5_to_J18 = 161.33  
            distance_NS1_to_J18 = 128.93  
         
            # Estimate travel times
            travel_time_WE5_to_J18 = estimate_travel_time(distance_WE5_to_J18, vehicle_ids_WE5)
            travel_time_NS1_to_J18 = estimate_travel_time(distance_NS1_to_J18, vehicle_ids_NS1)
            
            current_phase4 = traci.trafficlight.getPhase("J18")
            remaining_phase_duration4 = traci.trafficlight.getNextSwitch("J18") - traci.simulation.getTime()
            max_wait_time4 = 1
            #if current_phase4 < 5:
            if emergency_vehicles_NS4 or emergency_vehicles_EW4:
                       #remaining_phase_duration4 = traci.trafficlight.getPhaseDuration("J18")
                       # Set a maximum wait time for the emergency vehicle
                       #max_wait_time3 = 3
                    if current_phase4 in [5, 6]: 
                           # EW is green or yellow (transition phase)
                          if emergency_count_NS4 >= emergency_count_EW4:
                              # Prioritize NS direction
                             if remaining_phase_duration4 > max_wait_time4:
                                  traci.trafficlight.setPhaseDuration("J18", max_wait_time4)  # Change to NS green within 5 seconds
                          else:
                             # Extend EW green if there's an emergency vehicle passing
                               if current_phase4 == 5 and emergency_vehicles_EW4:
                                     traci.trafficlight.setPhaseDuration("J18", 60)  # Extend EW green
                               else:
                                   if remaining_phase_duration4 > max_wait_time4:
                                            traci.trafficlight.setPhaseDuration("J18", max_wait_time4)  # Change to NS green within 5 seconds
                    elif current_phase4 in [0, 1]:  # NS is green or yellow (transition phase)
                           # NS is green or yellow (transition phase)
                          if emergency_count_EW4 > emergency_count_NS4:
                                 # Prioritize EW direction
                                if remaining_phase_duration4 > max_wait_time4:
                                          traci.trafficlight.setPhaseDuration("J18", max_wait_time4)  # Change to EW green within 5 seconds
                          else:
                              # Extend NS green if there's an emergency vehicle passing
                               if current_phase4 == 0 and emergency_vehicles_NS4:
                                     traci.trafficlight.setPhaseDuration("J18", 60)  # Extend NS green
                               else:
                                  if remaining_phase_duration4 > max_wait_time4:
                                        traci.trafficlight.setPhaseDuration("J18", max_wait_time4)  # Change to EW green within 5 seconds 
            else:
                    
                    if vehicle_count_phase_NS4 >= 20 and vehicle_count_phase_EW4 < 20:
                       if Waiting_time_phase_NS4 >=300 and Waiting_time_phase_EW4 < 300:
                           if distances_ns4_0_15 > distances_ew4_0_15:
                               ns_phase_duration4 = 150
                               traci.trafficlight.setPhase("J18", 0)  # NS direction green
                               traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                           elif distances_ns4_15_30 > distances_ew4_15_30:
                               ns_phase_duration4 = 145
                               traci.trafficlight.setPhase("J18", 0)  # NS direction green
                               traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                           elif distances_ns4_gt_30 > distances_ew4_gt_30:
                               ns_phase_duration4 = 140
                               traci.trafficlight.setPhase("J18", 0)  # NS direction green
                               traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)    
                       elif 200 < Waiting_time_phase_NS4 < 300 and Waiting_time_phase_EW4 < 200:
                           if distances_ns4_0_15 > distances_ew4_0_15:
                               ns_phase_duration4 = 135
                               traci.trafficlight.setPhase("J18", 0)  # NS direction green
                               traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                           elif distances_ns4_15_30 > distances_ew4_15_30:
                               ns_phase_duration4 = 130
                               traci.trafficlight.setPhase("J18", 0)  # NS direction green
                               traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                           elif distances_ns4_gt_30 > distances_ew4_gt_30:
                               ns_phase_duration4 = 125
                               traci.trafficlight.setPhase("J18", 0)  # NS direction green
                               traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                       elif 150 < Waiting_time_phase_NS4 <= 200 and Waiting_time_phase_EW4 < 150:
                           if distances_ns4_0_15 > distances_ew4_0_15:
                               ns_phase_duration4 = 120
                               traci.trafficlight.setPhase("J18", 0)  # NS direction green
                               traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                           elif distances_ns4_15_30 > distances_ew4_15_30:
                               ns_phase_duration4 = 115
                               traci.trafficlight.setPhase("J18", 0)  # NS direction green
                               traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                           elif distances_ns4_gt_30 > distances_ew4_gt_30:
                               ns_phase_duration4 = 110
                               traci.trafficlight.setPhase("J18", 0)  # NS direction green
                               traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                       elif 50 < Waiting_time_phase_NS4 <= 150 and Waiting_time_phase_EW4 < 50:
                           if distances_ns4_0_15 > distances_ew4_0_15:
                               ns_phase_duration4 = 105
                               traci.trafficlight.setPhase("J18", 0)  # NS direction green
                               traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                           elif distances_ns4_15_30 > distances_ew4_15_30:
                               ns_phase_duration4 = 100
                               traci.trafficlight.setPhase("J18", 0)  # NS direction green
                               traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                           elif distances_ns4_gt_30 > distances_ew4_gt_30:
                               ns_phase_duration4 = 95
                               traci.trafficlight.setPhase("J18", 0)  # NS direction green
                               traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                       elif 0 < Waiting_time_phase_NS4 <= 50 and Waiting_time_phase_EW4 < 25:
                           if distances_ns4_0_15 > distances_ew4_0_15:
                               ns_phase_duration4 = 90
                               traci.trafficlight.setPhase("J18", 0)  # NS direction green
                               traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                           elif distances_ns4_15_30 > distances_ew4_15_30:
                               ns_phase_duration4 = 85
                               traci.trafficlight.setPhase("J18", 0)  # NS direction green
                               traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                           elif distances_ns4_gt_30 > distances_ew4_gt_30:
                               ns_phase_duration4 = 80
                               traci.trafficlight.setPhase("J18", 0)  # NS direction green
                               traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                               
                    elif vehicle_count_phase_EW4 >= 20 and vehicle_count_phase_NS4 < 20:
                        if Waiting_time_phase_EW4 >=300 and Waiting_time_phase_NS4 < 300:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 150
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 145
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 140
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)  
                        elif 200 < Waiting_time_phase_EW4 < 300 and Waiting_time_phase_NS4 < 200:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 135
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 130
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 125
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)  
                        elif 150 < Waiting_time_phase_EW4 <= 200 and Waiting_time_phase_NS4 < 150:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 120
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 115
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 110
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)  
                        elif 50 < Waiting_time_phase_EW4 <= 150 and Waiting_time_phase_NS4 < 50:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 105
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 100
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 95
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)  
                        elif 0 < Waiting_time_phase_EW4 <= 50 and Waiting_time_phase_NS4 < 25:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 90
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 85
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 80
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                            
                    
                    elif 15 < vehicle_count_phase_NS4 < 20 and vehicle_count_phase_EW4 < 15:
                        if Waiting_time_phase_NS4 >=300 and Waiting_time_phase_EW4 < 300:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 75
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 70
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 65
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                        elif 200 < Waiting_time_phase_NS4 < 300 and Waiting_time_phase_EW4 < 200:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 60
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 55
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 50
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                        elif 150 < Waiting_time_phase_NS4 <= 200 and Waiting_time_phase_EW4 < 150:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 45
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 40
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 35
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                        elif 50 < Waiting_time_phase_NS4 <= 150 and Waiting_time_phase_EW4 < 50:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 35
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 30
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 25
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                        elif 0 < Waiting_time_phase_NS4 <= 50 and Waiting_time_phase_EW4 < 25:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 25
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 20
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 15
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4) 
                                
                    elif 15 < vehicle_count_phase_EW4 < 20 and vehicle_count_phase_NS4 < 15:
                         if Waiting_time_phase_EW4 >=300 and Waiting_time_phase_NS4 < 300:
                             if distances_ew4_0_15 > distances_ns4_0_15:
                                 ew_phase_duration4 = 85
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                             elif distances_ew4_15_30 > distances_ns4_15_30:
                                 ew_phase_duration4 = 80
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                             elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                  ew_phase_duration4 = 75
                                  traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                         elif 200 < Waiting_time_phase_EW4 < 300 and Waiting_time_phase_NS4 < 200:
                             if distances_ew4_0_15 > distances_ns4_0_15:
                                 ew_phase_duration4 = 75
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                             elif distances_ew4_15_30 > distances_ns4_15_30:
                                 ew_phase_duration4 = 70
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                             elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                  ew_phase_duration4 = 65
                                  traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                         elif 150 < Waiting_time_phase_EW4 <= 200 and Waiting_time_phase_NS4 < 150:
                             if distances_ew4_0_15 > distances_ns4_0_15:
                                 ew_phase_duration4 = 65
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                             elif distances_ew4_15_30 > distances_ns4_15_30:
                                 ew_phase_duration4 = 60
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                             elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                  ew_phase_duration4 = 55
                                  traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                         elif 50 < Waiting_time_phase_EW4 <= 150 and Waiting_time_phase_NS4 < 50:
                             if distances_ew4_0_15 > distances_ns4_0_15:
                                 ew_phase_duration4 = 55
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                             elif distances_ew4_15_30 > distances_ns4_15_30:
                                 ew_phase_duration4 = 50
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                             elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                  ew_phase_duration4 = 45
                                  traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                         elif 0 < Waiting_time_phase_EW4 <= 50 and Waiting_time_phase_NS4 < 25:
                             if distances_ew4_0_15 > distances_ns4_0_15:
                                 ew_phase_duration4 = 45
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                             elif distances_ew4_15_30 > distances_ns4_15_30:
                                 ew_phase_duration4 = 40
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                             elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                  ew_phase_duration4 = 35
                                  traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                  traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                                  
                    elif 10 < vehicle_count_phase_NS4 <= 15 and vehicle_count_phase_EW4 < 10:
                        if Waiting_time_phase_NS4 >=300 and Waiting_time_phase_EW4 < 300:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 50
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 45
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 40
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4) 
                        elif 200 < Waiting_time_phase_NS4 < 300 and Waiting_time_phase_EW4 < 200:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 35
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 30
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 25
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                        elif 150 < Waiting_time_phase_NS4 <= 200 and Waiting_time_phase_EW4 < 150:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 25
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 20
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 15
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                        elif 50 < Waiting_time_phase_NS4 <= 150 and Waiting_time_phase_EW4 < 50:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 20
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 15
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 10
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                        elif 0 < Waiting_time_phase_NS4 <= 50 and Waiting_time_phase_EW4 < 25:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 15
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 12
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 10
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            
                    elif 10 < vehicle_count_phase_EW4 <= 15 and vehicle_count_phase_NS4 < 10:
                        if Waiting_time_phase_EW4 >=300 and Waiting_time_phase_NS4 < 300:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 50
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 45
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 40
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                        elif 200 < Waiting_time_phase_EW4 < 300 and Waiting_time_phase_NS4 < 200:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 40
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 35
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 30
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                        elif 150 < Waiting_time_phase_EW4 <= 200 and Waiting_time_phase_NS4 < 150:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 35
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 30
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 25
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                        elif 50 < Waiting_time_phase_EW4 <= 150 and Waiting_time_phase_NS4 < 50:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 20
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 18
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 15
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                        elif 0 < Waiting_time_phase_EW4 <= 50 and Waiting_time_phase_NS4 < 25:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 17
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 15
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 13
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                            
                    elif 5 < vehicle_count_phase_NS4 <= 10 and vehicle_count_phase_EW4 < 5:
                        if Waiting_time_phase_NS4 >=300 and Waiting_time_phase_EW4 < 300:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 30
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 25
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 20
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                        elif 200 < Waiting_time_phase_NS4 < 300 and Waiting_time_phase_EW4 < 200:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 20
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 18
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 15
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                        elif 150 < Waiting_time_phase_NS4 <= 200 and Waiting_time_phase_EW4 < 150:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 16
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 14
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 12
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                        elif 50 < Waiting_time_phase_NS4 <= 150 and Waiting_time_phase_EW4 < 50:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 11
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 9
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 7
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                        elif 0 < Waiting_time_phase_NS4 <= 50 and Waiting_time_phase_EW4 < 25:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 8
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 6
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 4
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                
                    elif 5 < vehicle_count_phase_EW4 <= 10 and vehicle_count_phase_NS4 < 5:
                        if Waiting_time_phase_EW4 >=300 and Waiting_time_phase_NS4 < 300:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 30
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 25
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 20
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                        elif 200 < Waiting_time_phase_EW4 < 300 and Waiting_time_phase_NS4 < 200:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 20
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 18
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 15
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                        elif 150 < Waiting_time_phase_EW4 <= 200 and Waiting_time_phase_NS4 < 150:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 17
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 15
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 13
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                        elif 50 < Waiting_time_phase_EW4 <= 150 and Waiting_time_phase_NS4 < 50:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 11
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 9
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 7
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                        elif 0 < Waiting_time_phase_EW4 <= 50 and Waiting_time_phase_NS4 < 25:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 6
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 4
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 2
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                            
                    elif 0 < vehicle_count_phase_NS4 <= 5 and vehicle_count_phase_EW4 < 3:
                        if Waiting_time_phase_NS4 >=300 and Waiting_time_phase_EW4 < 300:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 18
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 16
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 14
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                        elif 200 < Waiting_time_phase_NS4 < 300 and Waiting_time_phase_EW4 < 200:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 14
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 12
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 10
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                        elif 150 < Waiting_time_phase_NS4 <= 200 and Waiting_time_phase_EW4 < 150:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 8
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 6
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 5
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                        elif 50 < Waiting_time_phase_NS4 <= 150 and Waiting_time_phase_EW4 < 50:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 5
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 4
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 3
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                        elif 0 < Waiting_time_phase_NS4 <= 50 and Waiting_time_phase_EW4 < 25:
                            if distances_ns4_0_15 > distances_ew4_0_15:
                                ns_phase_duration4 = 4
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_15_30 > distances_ew4_15_30:
                                ns_phase_duration4 = 3
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                            elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                ns_phase_duration4 = 2
                                traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                                
                    elif 0 < vehicle_count_phase_EW4 <= 5 and vehicle_count_phase_NS4 < 3:
                        if Waiting_time_phase_EW4 >=300 and Waiting_time_phase_NS4 < 300:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 19
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 17
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 15
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                        elif 200 < Waiting_time_phase_EW4 < 300 and Waiting_time_phase_NS4 < 200:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 14
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 12
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 10
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                        elif 150 < Waiting_time_phase_EW4 <= 200 and Waiting_time_phase_NS4 < 150:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 10
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 8
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 6
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                        elif 50 < Waiting_time_phase_EW4 <= 150 and Waiting_time_phase_NS4 < 50:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 5
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 4
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 3
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                        elif 0 < Waiting_time_phase_EW4 <= 50 and Waiting_time_phase_NS4 < 25:
                            if distances_ew4_0_15 > distances_ns4_0_15:
                                ew_phase_duration4 = 4
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_15_30 > distances_ns4_15_30:
                                ew_phase_duration4 = 3
                                traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4)
                            elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                 ew_phase_duration4 = 2
                                 traci.trafficlight.setPhase("J18", 5)  # EW direction green
                                 traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ew_phase_duration4) 
                                 
                    elif 0 < vehicle_count_phase_NS4 <= 2 and vehicle_count_phase_EW4 > 2:
                            if Waiting_time_phase_NS4>= 200 and Waiting_time_phase_EW4 < 200:
                                if distances_ns4_0_15 > distances_ew4_0_15:
                                     ns_phase_duration4 = 10
                                     traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                     traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                                elif distances_ns4_15_30 > distances_ew4_15_30:
                                    ns_phase_duration4 = 6
                                    traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                                elif distances_ns4_gt_30 > distances_ew4_gt_30:
                                    ns_phase_duration4 = 2
                                    traci.trafficlight.setPhase("J18", 0)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                                    
                    elif 0 < vehicle_count_phase_EW4 <= 2 and vehicle_count_phase_NS4 > 2:
                            if Waiting_time_phase_EW4 >= 200 and Waiting_time_phase_NS4 < 200:
                                if distances_ew4_0_15 > distances_ns4_0_15:
                                     ew_phase_duration4 = 10
                                     traci.trafficlight.setPhase("J18", 5)  # NS direction green
                                     traci.trafficlight.setPhaseDuration("J18", traffic_command4 +  ew_phase_duration4) 
                                elif distances_ew4_15_30 > distances_ns4_15_30:
                                    ew_phase_duration4 = 6
                                    traci.trafficlight.setPhase("J18", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J18", traffic_command4 +  ew_phase_duration4) 
                                elif distances_ew4_gt_30 > distances_ns4_gt_30:
                                    ew_phase_duration4 = 2
                                    traci.trafficlight.setPhase("J18", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J18", traffic_command4 +  ew_phase_duration4)
                                    
                    elif vehicle_count_NS1 > vehicle_count_WE5:
                        if travel_time_NS1_to_J18 < travel_time_WE5_to_J18:
                            ns_phase_duration4 = 25
                            traci.trafficlight.setPhase("J18", 0)  # NS direction green
                            traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                        elif travel_time_NS1_to_J18 <= travel_time_WE5_to_J18: 
                             ns_phase_duration4 = 20
                             traci.trafficlight.setPhase("J18", 0)  # NS direction green
                             traci.trafficlight.setPhaseDuration("J18", traffic_command4 + ns_phase_duration4)
                    elif  vehicle_count_WE5 > vehicle_count_NS1:
                         if travel_time_WE5_to_J18 < travel_time_NS1_to_J18:
                             ew_phase_duration4 = 25
                             traci.trafficlight.setPhase("J18", 5)  # NS direction green
                             traci.trafficlight.setPhaseDuration("J18", traffic_command4 +  ew_phase_duration4)
                         elif travel_time_WE5_to_J18  <= travel_time_NS1_to_J18: 
                              ew_phase_duration4 = 20
                              traci.trafficlight.setPhase("J18", 5)  # NS direction green
                              traci.trafficlight.setPhaseDuration("J18", traffic_command4 +  ew_phase_duration4)  
                                
                    else:
                       traci.trafficlight.setProgram("J18", "0")  
                       
                       
                       
                   
            # Calculate average waiting time for each phas
            avg_waiting_time_EW4 = average_waiting_time(detector_phase_EW4)
            avg_waiting_time_NS4 = average_waiting_time(detector_phase_NS4)
            
            #if avg_waiting_time_EW1 != 0 or avg_waiting_time_NS1 != 0:
            sum_avg_waiting_time_EW4 += avg_waiting_time_EW4
            sum_avg_waiting_time_NS4 += avg_waiting_time_NS4
            
            fuel_consumption_EW4, co2_emission_EW4 = calculate_emissions(detector_phase_EW4)
            fuel_consumption_NS4, co2_emission_NS4 = calculate_emissions(detector_phase_NS4)    
            
            sum_fuel_consumption4 +=  fuel_consumption_EW4 + fuel_consumption_NS4
            sum_co2_emission4 +=co2_emission_EW4 + co2_emission_NS4
                      
                      
        if (traffic_command5 >= 0.5 ):
              
            detector_phase_EW5 = ["detector48","detector49","detector50","detector51","detector52","detector53"]
            detector_phase_NS5 =  ["detector54","detector55","detector56","detector57","detector58","detector59"]
            
            # list of detector for exchnage traffic data from neigbour intersection
            detector_EW4 =["detector36","detector37","detector38"]
            detector_WE6 =["detector63","detector64","detector65"]
            detector_NS2 =["detector18","detector19","detector20"]
            
            vehicle_count_phase_EW5= get_total_vehicle_count(detector_phase_EW5)
            vehicle_count_phase_NS5 = get_total_vehicle_count(detector_phase_NS5)
            Waiting_time_phase_EW5 = vehicle_waiting_time(detector_phase_EW5)
            Waiting_time_phase_NS5 = vehicle_waiting_time(detector_phase_NS5)
           
            emergency_vehicles_EW5 = get_emergency_vehicles(detector_phase_EW5)
            emergency_vehicles_NS5 = get_emergency_vehicles(detector_phase_NS5)
           
            emergency_count_EW5 = len(emergency_vehicles_EW5)
            emergency_count_NS5 = len(emergency_vehicles_NS5)
           
            
            intersection_position5 = (151.90,58.77)
            (distances_ns5_0_15, distances_ns5_15_30, distances_ns5_gt_30, 
             distances_ew5_0_15, distances_ew5_15_30, distances_ew5_gt_30) = calculate_vehicle_distances_from_detectors(intersection_position5, detector_phase_NS5, detector_phase_EW5)
            
            # Get vehicle counts
            Tot_Vehicle_count_EW46 = 0
            vehicle_count_EW4 = get_total_vehicle_count(detector_EW4)
            vehicle_count_WE6 = get_total_vehicle_count(detector_WE6)
            vehicle_count_NS2 = get_total_vehicle_count(detector_NS2)
           
            Tot_Vehicle_count_EW46 = vehicle_count_EW4 + vehicle_count_WE6
            # Get vehicle IDs
            vehicle_ids_EW4 = get_vehicle_ids(detector_EW4)
            vehicle_ids_WE6 = get_vehicle_ids(detector_WE6)
            vehicle_ids_NS2 = get_vehicle_ids(detector_NS2)
         
            # Use lane length as distance between intersections
            distance_EW4_to_J19 = 142.94  
            distance_WE6_to_J19 = 138.51 
            distance_NS2_to_J19 = 127.53
         
            # Estimate travel times
            tot_travel_time_EW46_to_J19 = 0
            travel_time_EW4_to_J19 = estimate_travel_time(distance_EW4_to_J19, vehicle_ids_EW4)
            travel_time_WE6_to_J19 = estimate_travel_time(distance_WE6_to_J19, vehicle_ids_WE6)
            travel_time_NS2_to_J19 = estimate_travel_time(distance_NS2_to_J19, vehicle_ids_NS2)
            tot_travel_time_EW46_to_J19 = travel_time_EW4_to_J19 + travel_time_WE6_to_J19
            
            current_phase5 = traci.trafficlight.getPhase("J19")
            remaining_phase_duration5 = traci.trafficlight.getPhaseDuration("J19") - traci.simulation.getTime()
            max_wait_time5 = 1
            #if current_phase5 < 5:
            if emergency_vehicles_NS5 or emergency_vehicles_EW5:
                       #remaining_phase_duration5 = traci.trafficlight.getPhaseDuration("J19")
                       # Set a maximum wait time for the emergency vehicle
                       #max_wait_time5 = 3
                        if current_phase5 in [0,1]:
                               # EW is green or yellow (transition phase)
                              if emergency_count_NS5 >= emergency_count_EW5:
                                  # Prioritize NS direction
                                 if remaining_phase_duration5 > max_wait_time5:
                                      traci.trafficlight.setPhaseDuration("J19", max_wait_time5)  # Change to NS green within 5 seconds
                              else:
                                 # Extend EW green if there's an emergency vehicle passing
                                   if current_phase5 == 0 and emergency_vehicles_EW5:
                                         traci.trafficlight.setPhaseDuration("J19", traffic_command5)  # Extend EW green
                                   else:
                                       if remaining_phase_duration5 > max_wait_time5:
                                                traci.trafficlight.setPhaseDuration("J19", max_wait_time5)  # Change to NS green within 5 seconds
                        elif current_phase5 in [5,6]:
                               # NS is green or yellow (transition phase)
                              if emergency_count_EW5 > emergency_count_NS5:
                                     # Prioritize EW direction
                                    if remaining_phase_duration5 > max_wait_time5:
                                              traci.trafficlight.setPhaseDuration("J19", max_wait_time5)  # Change to EW green within 5 seconds
                              else:
                                  # Extend NS green if there's an emergency vehicle passing
                                   if current_phase5 == 5 and emergency_vehicles_NS5:
                                         traci.trafficlight.setPhaseDuration("J19",traffic_command5)  # Extend NS green
                                   else:
                                      if remaining_phase_duration5 > max_wait_time5:
                                            traci.trafficlight.setPhaseDuration("J19", max_wait_time5)  # Change to EW green within 5 seconds  
                                            
            else:
                        if vehicle_count_phase_NS5 >= 20 and vehicle_count_phase_EW5 < 20:
                            if Waiting_time_phase_NS5 >=300 and Waiting_time_phase_EW5 < 300:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 150
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 145
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 140
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                            elif 200 < Waiting_time_phase_NS5 < 300  and Waiting_time_phase_EW5 < 200:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 135
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 130
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 125
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                            elif 150 < Waiting_time_phase_NS5 <= 200  and Waiting_time_phase_EW5 < 150:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 120
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 115
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 110
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                            elif 50 < Waiting_time_phase_NS5 <= 150  and Waiting_time_phase_EW5 < 50:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 105
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 100
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 95
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                            elif  0 < Waiting_time_phase_NS5 <= 50 and Waiting_time_phase_EW5 < 25:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 90
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 85
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 80
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                            
                        elif vehicle_count_phase_EW5 >= 20 and vehicle_count_phase_NS5 < 20:
                             if Waiting_time_phase_EW5 >=300 and Waiting_time_phase_NS5 < 300:
                                 if distances_ew5_0_15 > distances_ns5_0_15:
                                     ew_phase_duration5 = 150
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_15_30 > distances_ns5_15_30:
                                     ew_phase_duration5 = 145
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                     ew_phase_duration5 = 140
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                             elif 200 < Waiting_time_phase_EW5 < 300 and Waiting_time_phase_NS5 < 200:
                                 if distances_ew5_0_15 > distances_ns5_0_15:
                                     ew_phase_duration5 = 135
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_15_30 > distances_ns5_15_30:
                                     ew_phase_duration5 = 130
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                     ew_phase_duration5 = 125
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                             elif 150 < Waiting_time_phase_EW5 <= 200 and Waiting_time_phase_NS5 < 150:
                                 if distances_ew5_0_15 > distances_ns5_0_15:
                                     ew_phase_duration5 = 120
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_15_30 > distances_ns5_15_30:
                                     ew_phase_duration5 = 115
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                     ew_phase_duration5 = 110
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                             elif 50 < Waiting_time_phase_EW5 <= 150 and Waiting_time_phase_NS5 < 50:
                                 if distances_ew5_0_15 > distances_ns5_0_15:
                                     ew_phase_duration5 = 105
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_15_30 > distances_ns5_15_30:
                                     ew_phase_duration5 = 100
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                     ew_phase_duration5 = 95
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                             elif 0 < Waiting_time_phase_EW5 <= 50 and Waiting_time_phase_NS5 < 25:
                                 if distances_ew5_0_15 > distances_ns5_0_15:
                                     ew_phase_duration5 = 105
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_15_30 > distances_ns5_15_30:
                                     ew_phase_duration5 = 100
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                     ew_phase_duration5 = 95
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                     
                        elif 15 < vehicle_count_phase_NS5 < 20 and vehicle_count_phase_EW5 < 15:
                            if Waiting_time_phase_NS5 >=300 and Waiting_time_phase_EW5 < 300:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 75
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 70
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 65
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                            elif 200 < Waiting_time_phase_NS5 < 300 and Waiting_time_phase_EW5 < 200:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 60
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 55
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 50
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                            elif 150 < Waiting_time_phase_NS5 <= 200 and Waiting_time_phase_EW5 < 150:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 45
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 40
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 35
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                            elif 50 < Waiting_time_phase_NS5 <= 150 and Waiting_time_phase_EW5 < 50:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 30
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 25
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 20
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                            elif  0 < Waiting_time_phase_NS5 <= 50 and Waiting_time_phase_EW5 < 25:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 15
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 10
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 5
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5) 
                                    
                        elif 15 < vehicle_count_phase_EW5 < 20 and vehicle_count_phase_NS5 < 15:
                            if Waiting_time_phase_EW5 >=300 and Waiting_time_phase_NS5 < 300:
                                if distances_ew5_0_15 > distances_ns5_0_15:
                                    ew_phase_duration5 = 75
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_15_30 > distances_ns5_15_30:
                                    ew_phase_duration5 = 70
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                    ew_phase_duration5 = 65
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                            elif 200 < Waiting_time_phase_EW5 < 300 and Waiting_time_phase_NS5 < 200:
                                if distances_ew5_0_15 > distances_ns5_0_15:
                                    ew_phase_duration5 = 60
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_15_30 > distances_ns5_15_30:
                                    ew_phase_duration5 = 55
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                    ew_phase_duration5 = 50
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                            elif 150 < Waiting_time_phase_EW5 <= 200 and Waiting_time_phase_NS5 < 150:
                                if distances_ew5_0_15 > distances_ns5_0_15:
                                    ew_phase_duration5 = 45
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_15_30 > distances_ns5_15_30:
                                    ew_phase_duration5 = 40
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                    ew_phase_duration5 = 35
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                            elif 50 < Waiting_time_phase_EW5 <= 150 and Waiting_time_phase_NS5 < 50:
                                if distances_ew5_0_15 > distances_ns5_0_15:
                                    ew_phase_duration5 = 30
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_15_30 > distances_ns5_15_30:
                                    ew_phase_duration5 = 25
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                    ew_phase_duration5 = 20
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                            elif 0 < Waiting_time_phase_EW5 <= 50 and Waiting_time_phase_NS5 < 25:
                                if distances_ew5_0_15 > distances_ns5_0_15:
                                    ew_phase_duration5 = 15
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_15_30 > distances_ns5_15_30:
                                    ew_phase_duration5 = 10
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                    ew_phase_duration5 = 5
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                    
                        elif 10 < vehicle_count_phase_NS5 <= 15 and vehicle_count_phase_EW5 < 10:
                            if Waiting_time_phase_NS5 >=300 and Waiting_time_phase_EW5 < 300:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5) 
                            elif 200 < Waiting_time_phase_NS5 < 300 and Waiting_time_phase_EW5 < 200:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5) 
                            elif 150 < Waiting_time_phase_NS5 <= 200 and Waiting_time_phase_EW5 < 150: 
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5) 
                            elif 50 < Waiting_time_phase_NS5 <= 150 and Waiting_time_phase_EW5 < 50:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5) 
                            elif 0 < Waiting_time_phase_NS5 <= 50 and Waiting_time_phase_EW5 < 25:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5) 
                                
                        elif 10 < vehicle_count_phase_EW5 <= 15 and vehicle_count_phase_NS5 < 10:
                             if Waiting_time_phase_EW5 >=300 and Waiting_time_phase_NS5 < 300:
                                 if distances_ew5_0_15 > distances_ns5_0_15:
                                     ew_phase_duration5 = 0
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_15_30 > distances_ns5_15_30:
                                     ew_phase_duration5 = 0
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                     ew_phase_duration5 = 0
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                             elif 200 < Waiting_time_phase_EW5 < 300 and Waiting_time_phase_NS5 < 200:
                                 if distances_ew5_0_15 > distances_ns5_0_15:
                                     ew_phase_duration5 = 0
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_15_30 > distances_ns5_15_30:
                                     ew_phase_duration5 = 0
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                     ew_phase_duration5 = 0
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                             elif 150 < Waiting_time_phase_EW5 <= 200 and Waiting_time_phase_NS5 < 150:
                                 if distances_ew5_0_15 > distances_ns5_0_15:
                                     ew_phase_duration5 = 0
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_15_30 > distances_ns5_15_30:
                                     ew_phase_duration5 = 0
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                     ew_phase_duration5 = 0
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                             elif 50 < Waiting_time_phase_EW5 <= 150 and Waiting_time_phase_NS5 < 50:
                                 if distances_ew5_0_15 > distances_ns5_0_15:
                                     ew_phase_duration5 = 0
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_15_30 > distances_ns5_15_30:
                                     ew_phase_duration5 = 0
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                     ew_phase_duration5 = 0
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                             elif 0 < Waiting_time_phase_EW5 <= 50 and Waiting_time_phase_NS5 < 25:
                                 if distances_ew5_0_15 > distances_ns5_0_15:
                                     ew_phase_duration5 = 0
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_15_30 > distances_ns5_15_30:
                                     ew_phase_duration5 = 0
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                     ew_phase_duration5 = 0
                                     traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                     traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                 
                        elif 5 < vehicle_count_phase_NS5 <= 10 and vehicle_count_phase_EW5 < 5:
                            if Waiting_time_phase_NS5 >=300 and Waiting_time_phase_EW5 < 300:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5) 
                            elif 200 < Waiting_time_phase_NS5 < 300 and Waiting_time_phase_EW5 < 200:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5) 
                            elif 150 < Waiting_time_phase_NS5 <= 200 and Waiting_time_phase_EW5 < 150: 
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5) 
                            elif 50 < Waiting_time_phase_NS5 <= 150 and Waiting_time_phase_EW5 < 50:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5) 
                            elif  0 < Waiting_time_phase_NS5 <= 50 and Waiting_time_phase_EW5 < 25:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5) 
                                
                        elif 5 < vehicle_count_phase_EW5 <= 10 and vehicle_count_phase_NS5 < 5:
                           if Waiting_time_phase_EW5 >=300 and Waiting_time_phase_NS5 < 300:
                               if distances_ew5_0_15 > distances_ns5_0_15:
                                   ew_phase_duration5 = 0
                                   traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                               elif distances_ew5_15_30 > distances_ns5_15_30:
                                   ew_phase_duration5 = 0
                                   traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                               elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                   ew_phase_duration5 = 0
                                   traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                           elif 200 < Waiting_time_phase_EW5 < 300 and Waiting_time_phase_NS5 < 200:
                               if distances_ew5_0_15 > distances_ns5_0_15:
                                   ew_phase_duration5 = 0
                                   traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                               elif distances_ew5_15_30 > distances_ns5_15_30:
                                   ew_phase_duration5 = 0
                                   traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                               elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                   ew_phase_duration5 = 0
                                   traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                           elif 150 < Waiting_time_phase_EW5 <= 200 and Waiting_time_phase_NS5 < 150:
                               if distances_ew5_0_15 > distances_ns5_0_15:
                                   ew_phase_duration5 = 0
                                   traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                               elif distances_ew5_15_30 > distances_ns5_15_30:
                                   ew_phase_duration5 = 0
                                   traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                               elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                   ew_phase_duration5 = 0
                                   traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                           elif 50 < Waiting_time_phase_EW5 <= 150 and Waiting_time_phase_NS5 < 50:
                               if distances_ew5_0_15 > distances_ns5_0_15:
                                   ew_phase_duration5 = 0
                                   traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                               elif distances_ew5_15_30 > distances_ns5_15_30:
                                   ew_phase_duration5 = 0
                                   traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                               elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                   ew_phase_duration5 = 0
                                   traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                           elif 0 < Waiting_time_phase_EW5 <= 50 and Waiting_time_phase_NS5 < 25:
                               if distances_ew5_0_15 > distances_ns5_0_15:
                                   ew_phase_duration5 = 0
                                   traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                               elif distances_ew5_15_30 > distances_ns5_15_30:
                                   ew_phase_duration5 = 0
                                   traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                               elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                   ew_phase_duration5 = 0
                                   traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                   traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                               
                        elif 0 <= vehicle_count_phase_NS5 <= 5 and vehicle_count_phase_EW5 < 3:
                            if Waiting_time_phase_NS5 >=300 and Waiting_time_phase_EW5 < 300:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5) 
                            elif 200 < Waiting_time_phase_NS5 < 300 and Waiting_time_phase_EW5 < 200:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5) 
                            elif 150 < Waiting_time_phase_NS5 <= 200 and Waiting_time_phase_EW5 < 150:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5) 
                            elif 50 < Waiting_time_phase_NS5 <= 150 and Waiting_time_phase_EW5 < 50:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5) 
                            elif  0 < Waiting_time_phase_NS5 <= 50 and Waiting_time_phase_EW5 < 25:
                                if distances_ns5_0_15 > distances_ew5_0_15:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_15_30 > distances_ew5_15_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5)
                                elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                    ns_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J19",  traffic_command5 + ns_phase_duration5) 
                                 
                        elif 0 <= vehicle_count_phase_EW5 <= 5 and vehicle_count_phase_NS5 < 3:
                            if Waiting_time_phase_EW5 >=300 and Waiting_time_phase_NS5 < 300:
                                if distances_ew5_0_15 > distances_ns5_0_15:
                                    ew_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_15_30 > distances_ns5_15_30:
                                    ew_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                    ew_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                            elif 200 < Waiting_time_phase_EW5 < 300 and Waiting_time_phase_NS5 < 200:
                                if distances_ew5_0_15 > distances_ns5_0_15:
                                    ew_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_15_30 > distances_ns5_15_30:
                                    ew_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                    ew_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                            elif 150 < Waiting_time_phase_EW5 <= 200 and Waiting_time_phase_NS5 < 150:
                                if distances_ew5_0_15 > distances_ns5_0_15:
                                    ew_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_15_30 > distances_ns5_15_30:
                                    ew_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                    ew_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                            elif 50 < Waiting_time_phase_EW5 <= 150 and Waiting_time_phase_NS5 < 50:
                                if distances_ew5_0_15 > distances_ns5_0_15:
                                    ew_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_15_30 > distances_ns5_15_30:
                                    ew_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                    ew_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                            elif 0 < Waiting_time_phase_EW5 <= 50 and Waiting_time_phase_NS5 < 25:
                                if distances_ew5_0_15 > distances_ns5_0_15:
                                    ew_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_15_30 > distances_ns5_15_30:
                                    ew_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                                elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                    ew_phase_duration5 = 0
                                    traci.trafficlight.setPhase("J19", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ew_phase_duration5)
                        
                        elif 0 < vehicle_count_phase_NS5 <= 2 and vehicle_count_phase_EW5 > 2:
                                if Waiting_time_phase_NS5 >= 200 and Waiting_time_phase_EW5 < 200:
                                    if distances_ns5_0_15 > distances_ew5_0_15:
                                         ns_phase_duration5 = 10
                                         traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                         traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ns_phase_duration5)
                                    elif distances_ns5_15_30 > distances_ew5_15_30:
                                        ns_phase_duration5 = 6
                                        traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                        traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ns_phase_duration5)
                                    elif distances_ns5_gt_30 > distances_ew5_gt_30:
                                        ns_phase_duration5 = 2
                                        traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                        traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ns_phase_duration5)
                                        
                        elif 0 < vehicle_count_phase_EW5 <= 2 and vehicle_count_phase_NS5 > 2:
                                if Waiting_time_phase_EW5 >= 200 and Waiting_time_phase_NS5 < 200:
                                    if distances_ew5_0_15 > distances_ns5_0_15:
                                         ew_phase_duration5 = 10
                                         traci.trafficlight.setPhase("J19", 0)  # NS direction green
                                         traci.trafficlight.setPhaseDuration("J19", traffic_command5 +  ew_phase_duration5) 
                                    elif distances_ew5_15_30 > distances_ns5_15_30:
                                        ew_phase_duration5 = 6
                                        traci.trafficlight.setPhase("J19", 0)  # NS direction green
                                        traci.trafficlight.setPhaseDuration("J19", traffic_command5 +  ew_phase_duration5) 
                                    elif distances_ew5_gt_30 > distances_ns5_gt_30:
                                        ew_phase_duration5 = 2
                                        traci.trafficlight.setPhase("J19", 0)  # NS direction green
                                        traci.trafficlight.setPhaseDuration("J19", traffic_command5 +  ew_phase_duration5)
                                        
                        elif vehicle_count_NS2 > Tot_Vehicle_count_EW46:
                            if travel_time_NS2_to_J19 < tot_travel_time_EW46_to_J19:
                                ns_phase_duration5 = 25
                                traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ns_phase_duration5)
                            elif  travel_time_NS2_to_J19 <= tot_travel_time_EW46_to_J19 : 
                                 ns_phase_duration5 = 20
                                 traci.trafficlight.setPhase("J19", 5)  # NS direction green
                                 traci.trafficlight.setPhaseDuration("J19", traffic_command5 + ns_phase_duration5)
                        elif Tot_Vehicle_count_EW46 < vehicle_count_NS2:
                             if tot_travel_time_EW46_to_J19 < travel_time_NS2_to_J19:
                                 ew_phase_duration5 = 25
                                 traci.trafficlight.setPhase("J19", 0)  # NS direction green
                                 traci.trafficlight.setPhaseDuration("J19", traffic_command5 +  ew_phase_duration5)
                             elif tot_travel_time_EW46_to_J19 <= travel_time_NS2_to_J19: 
                                  ew_phase_duration5 = 20
                                  traci.trafficlight.setPhase("J19", 0)  # NS direction green
                                  traci.trafficlight.setPhaseDuration("J19", traffic_command5 +  ew_phase_duration5)                 
                                
                        else: 
                            traci.trafficlight.setProgram("J19", "0")
                            
                            
                            
            # Calculate average waiting time for each phas
            avg_waiting_time_EW5 = average_waiting_time(detector_phase_EW5)
            avg_waiting_time_NS5 = average_waiting_time(detector_phase_NS5)
           
            #if avg_waiting_time_EW1 != 0 or avg_waiting_time_NS1 != 0:
            sum_avg_waiting_time_EW5 += avg_waiting_time_EW5
            sum_avg_waiting_time_NS5 += avg_waiting_time_NS5
           
            fuel_consumption_EW5, co2_emission_EW5 = calculate_emissions(detector_phase_EW5)
            fuel_consumption_NS5, co2_emission_NS5 = calculate_emissions(detector_phase_NS5)
            
            sum_fuel_consumption5 +=  fuel_consumption_EW5 + fuel_consumption_NS5
            sum_co2_emission5 +=co2_emission_EW5 + co2_emission_NS5
                   
                   
                        
                   
        if (traffic_command6 >= 0.5 ):
            detector_phase_EW6 = ["detector60","detector61","detector62","detector63","detector64","detector65"]
            detector_phase_NS6 =  ["detector66","detector67","detector68","detector69","detector70","detector71"]  
            
            #detector list for exchange traffic data from neigbour intersection 
            detector_EW5= ["detector48","detector49","detector50"]
            detector_NS3= ["detector30","detector31","detector32"]
            
            # Get vehicle counts for both phases
            vehicle_count_phase_EW6 = get_total_vehicle_count( detector_phase_EW6)
            vehicle_count_phase_NS6 = get_total_vehicle_count(detector_phase_NS6)
            Waiting_time_phase_EW6 = vehicle_waiting_time(detector_phase_EW6)
            Waiting_time_phase_NS6 = vehicle_waiting_time(detector_phase_NS6)
            
            emergency_vehicles_EW6 = get_emergency_vehicles(detector_phase_EW6)
            emergency_vehicles_NS6 = get_emergency_vehicles(detector_phase_NS6)
            
            emergency_count_EW6 = len(emergency_vehicles_EW6)
            emergency_count_NS6 = len(emergency_vehicles_NS6)
            
            
            intersection_position6 = (264.14,62.92)
            (distances_ns6_0_15, distances_ns6_15_30, distances_ns6_gt_30, 
             distances_ew6_0_15, distances_ew6_15_30, distances_ew6_gt_30) = calculate_vehicle_distances_from_detectors(intersection_position6, detector_phase_NS6, detector_phase_EW6)
            
            # Get vehicle counts
            vehicle_count_EW5 = get_total_vehicle_count(detector_EW5)
            vehicle_count_NS3 = get_total_vehicle_count(detector_NS3)
           
            # Get vehicle IDs
            vehicle_ids_EW5 = get_vehicle_ids(detector_EW5)
            vehicle_ids_NS3 = get_vehicle_ids(detector_NS3)
         
            # Use lane length as distance between intersections
            distance_EW5_to_J20 = 161.33
            distance_NS3_to_J20 = 118.94
         
            # Estimate travel times
            travel_time_EW5_to_J20 = estimate_travel_time(distance_EW5_to_J20, vehicle_ids_EW5)
            travel_time_NS3_to_J20 = estimate_travel_time(distance_NS3_to_J20, vehicle_ids_NS3)
           
            
            current_phase6 = traci.trafficlight.getPhase("J20")
            remaining_phase_duration6 = traci.trafficlight.getPhaseDuration("J20") - traci.simulation.getTime()
            max_wait_time6 = 1
            #if current_phase6 < 5:
            if emergency_vehicles_NS6 or emergency_vehicles_EW6:
                       #remaining_phase_duration6 = traci.trafficlight.getPhaseDuration("J20")
                       # Set a maximum wait time for the emergency vehicle
                       #max_wait_time6 = 3
                    if current_phase6 in [0,1]:
                           # EW is green or yellow (transition phase)
                          if emergency_count_NS6 >= emergency_count_EW6:
                              # Prioritize NS direction
                             if remaining_phase_duration6 > max_wait_time6:
                                  traci.trafficlight.setPhaseDuration("J20", max_wait_time6)  # Change to NS green within 5 seconds
                          else:
                             # Extend EW green if there's an emergency vehicle passing
                               if current_phase6 == 0 and emergency_vehicles_EW6:
                                     traci.trafficlight.setPhaseDuration("J20", 60)  # Extend EW green
                               else:
                                   if remaining_phase_duration6 > max_wait_time6:
                                            traci.trafficlight.setPhaseDuration("J20", max_wait_time6)  # Change to NS green within 5 seconds
                    elif current_phase6 in [5,6]:
                           # NS is green or yellow (transition phase)
                          if emergency_count_EW6 > emergency_count_NS6:
                                 # Prioritize EW direction
                                if remaining_phase_duration6 > max_wait_time6:
                                          traci.trafficlight.setPhaseDuration("J20", max_wait_time6)  # Change to EW green within 5 seconds
                          else:
                              # Extend NS green if there's an emergency vehicle passing
                               if current_phase6 == 5 and emergency_vehicles_NS6:
                                     traci.trafficlight.setPhaseDuration("J20", 60)  # Extend NS green
                               else:
                                  if remaining_phase_duration6 > max_wait_time6:
                                        traci.trafficlight.setPhaseDuration("J20", max_wait_time6)  # Change to EW green within 5 seconds          
            else:
                    
                    if vehicle_count_phase_NS6 >= 20 and vehicle_count_phase_EW6 < 20:
                            if Waiting_time_phase_NS6 >=300 and Waiting_time_phase_EW6 < 300:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 150
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 145
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 140
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 200 < Waiting_time_phase_NS6 < 300 and Waiting_time_phase_EW6 < 200:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 135
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 130
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 125
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 150 < Waiting_time_phase_NS6 <= 200 and Waiting_time_phase_EW6 < 150:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 120
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 115
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 110
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 50 < Waiting_time_phase_NS6 <= 150 and Waiting_time_phase_EW6 < 50:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 105
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 100
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 95
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 0 < Waiting_time_phase_NS6 <= 50 and Waiting_time_phase_EW6 < 25:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 90
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 85
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 80
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                       
                    elif vehicle_count_phase_EW6 >= 20 and vehicle_count_phase_NS6 < 20: 
                            if Waiting_time_phase_EW6 >=300 and Waiting_time_phase_NS6 < 300:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 150
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 145
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 140
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif 200 < Waiting_time_phase_EW6 < 300 and Waiting_time_phase_NS6 < 200:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 135
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 130
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 125
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif 150 < Waiting_time_phase_EW6 <= 200 and Waiting_time_phase_NS6 < 150:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 120
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 115
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 110
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif 50 < Waiting_time_phase_EW6 <= 150 and Waiting_time_phase_NS6 < 50:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 105
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 100
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 95
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif  0 < Waiting_time_phase_EW6 <= 50 and Waiting_time_phase_NS6 < 25:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 90
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 85
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 80
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                   
                    elif 15 < vehicle_count_phase_NS6 < 20 and vehicle_count_phase_EW6 < 15:
                            if Waiting_time_phase_NS6 >=300 and Waiting_time_phase_EW6 < 300:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 85
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 80
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 75
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 200 < Waiting_time_phase_NS6 < 300 and Waiting_time_phase_EW6 < 200:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 80
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 75
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 70
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 150 < Waiting_time_phase_NS6 <= 200 and Waiting_time_phase_EW6 < 150:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 70
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 65
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 60
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 50 < Waiting_time_phase_NS6 <= 150 and Waiting_time_phase_EW6 < 50:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 55
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 50
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 45
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 0 < Waiting_time_phase_NS6 <= 50 and Waiting_time_phase_EW6 < 25:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 45
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 40
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 35
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                
                    elif 15 < vehicle_count_phase_EW6 < 20 and vehicle_count_phase_NS6 < 15:
                            if Waiting_time_phase_EW6 >=300 and Waiting_time_phase_NS6 < 300:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 90
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 85
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 80
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif 200 < Waiting_time_phase_EW6 < 300 and Waiting_time_phase_NS6 < 200:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 75
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 70
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 65
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif 150 < Waiting_time_phase_EW6 <= 200 and Waiting_time_phase_NS6 < 150:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 65
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 60
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 55
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif 50 < Waiting_time_phase_EW6 <= 150 and Waiting_time_phase_NS6 < 50:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 50
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 45
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 40
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif  0 < Waiting_time_phase_EW6 <= 50 and Waiting_time_phase_NS6 < 25:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 35
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 30
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 25
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                             
                    elif 10 < vehicle_count_phase_NS6 <= 15 and vehicle_count_phase_EW6 < 10:
                            if Waiting_time_phase_NS6 >=300 and Waiting_time_phase_EW6 < 300:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 40
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30: 
                                    ns_phase_duration6 = 38
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 33
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 200 < Waiting_time_phase_NS6 < 300 and Waiting_time_phase_EW6 < 200:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 30
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 27
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 25
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 150 < Waiting_time_phase_NS6 <= 200 and Waiting_time_phase_EW6 < 150:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 25
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 23
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 21
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 50 < Waiting_time_phase_NS6 <= 150 and Waiting_time_phase_EW6 < 50:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 20
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 18
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 16
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 0 < Waiting_time_phase_NS6 <= 50 and Waiting_time_phase_EW6 < 25:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 15
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 13
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 11
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                
                    elif 10 < vehicle_count_phase_EW6 <= 15 and vehicle_count_phase_NS6 < 10:
                            if Waiting_time_phase_EW6 >=300 and Waiting_time_phase_NS6 < 300:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 50
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 45
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 40
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif 200 < Waiting_time_phase_EW6 < 300 and Waiting_time_phase_NS6 < 200:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 35
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 30
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 25
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif 150 < Waiting_time_phase_EW6 <= 200 and Waiting_time_phase_NS6 < 150:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 25
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 23
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 21
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif 50 < Waiting_time_phase_EW6 <= 150 and Waiting_time_phase_NS6 < 50:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 20
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 18
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 16
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif  0 < Waiting_time_phase_EW6 <= 50 and Waiting_time_phase_NS6 < 25:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 15
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 13
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 11
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                        
                    elif 5 < vehicle_count_phase_NS6 <= 10 and vehicle_count_phase_EW6 < 5:
                            if Waiting_time_phase_NS6 >=300 and Waiting_time_phase_EW6 < 300:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 25
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 23
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 21
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 200 < Waiting_time_phase_NS6 < 300 and Waiting_time_phase_EW6 < 200:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 25
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 23
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 21
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 150 < Waiting_time_phase_NS6 <= 200 and Waiting_time_phase_EW6 < 150:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 20
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 17
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 14
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 50 < Waiting_time_phase_NS6 <= 150 and Waiting_time_phase_EW6 < 50:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 13
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 12
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 10
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 0 < Waiting_time_phase_NS6 <= 50 and Waiting_time_phase_EW6 < 25:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 8
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 6
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 4
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                   
                    elif 5 < vehicle_count_phase_EW6 <= 10 and vehicle_count_phase_NS6 < 5:
                            if Waiting_time_phase_EW6 >=300 and Waiting_time_phase_NS6 < 300:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 25
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 23
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 21
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif 200 < Waiting_time_phase_EW6 < 300 and Waiting_time_phase_NS6 < 200:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 20
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 18
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 16
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif 150 < Waiting_time_phase_EW6 <= 200 and Waiting_time_phase_NS6 < 150:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 15
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 13
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 11
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif 50 < Waiting_time_phase_EW6 <= 150 and Waiting_time_phase_NS6 < 50:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 10
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 8
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 6
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif  0 < Waiting_time_phase_EW6 <= 50 and Waiting_time_phase_NS6 < 25:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 5
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 4
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 3
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                
                    elif 0 < vehicle_count_phase_NS6 <=5 and vehicle_count_phase_EW6 < 3:
                            if Waiting_time_phase_NS6 >=300 and Waiting_time_phase_EW6 < 300:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 15
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 12
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 11
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 200 < Waiting_time_phase_NS6 < 300 and Waiting_time_phase_EW6 < 200:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 10
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 8
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 6
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 150 < Waiting_time_phase_NS6 <= 200 and Waiting_time_phase_EW6 < 150:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 5
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 4
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 3
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 50 < Waiting_time_phase_NS6 <= 150 and Waiting_time_phase_EW6 < 50:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 4
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 3
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 2
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            elif 0 < Waiting_time_phase_NS6 <= 50 and Waiting_time_phase_EW6 < 25:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                    ns_phase_duration6 = 3
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 2
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                   ns_phase_duration6 = 1
                                   traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                   traci.trafficlight.setPhaseDuration("J20",  traffic_command6 + ns_phase_duration6)
                            
                    elif 0 < vehicle_count_phase_EW6 <= 5 and  vehicle_count_phase_NS6 < 3:
                            if Waiting_time_phase_EW6 >=300 and Waiting_time_phase_NS6 < 300:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 15
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 13
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 11
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif 200 < Waiting_time_phase_EW6 < 300 and Waiting_time_phase_NS6 < 200:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 10
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 8
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 6
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif 150 < Waiting_time_phase_EW6 <= 200 and Waiting_time_phase_NS6 < 150:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 5
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 4
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 3
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif 50 < Waiting_time_phase_EW6 <= 150 and Waiting_time_phase_NS6 < 50:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 4
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 3
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 2
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                            elif  0 < Waiting_time_phase_EW6 <= 50 and Waiting_time_phase_NS6 < 25:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                    ew_phase_duration6 = 3
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 2
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 1
                                    traci.trafficlight.setPhase("J20", 0)  # EW direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ew_phase_duration6)
                                    
                    elif 0 < vehicle_count_phase_NS6 <= 2 and vehicle_count_phase_EW6 > 2:
                            if Waiting_time_phase_NS6 >= 200 and Waiting_time_phase_EW6 < 200:
                                if distances_ns6_0_15 > distances_ew6_0_15:
                                     ns_phase_duration6 = 10
                                     traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                     traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_15_30 > distances_ew6_15_30:
                                    ns_phase_duration6 = 6
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ns_phase_duration6)
                                elif distances_ns6_gt_30 > distances_ew6_gt_30:
                                    ns_phase_duration6 = 2
                                    traci.trafficlight.setPhase("J20", 5)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ns_phase_duration6)
                                    
                    elif 0 < vehicle_count_phase_EW6 <= 2 and vehicle_count_phase_NS6 > 2:
                            if Waiting_time_phase_EW6 >= 200 and Waiting_time_phase_NS6 < 200:
                                if distances_ew6_0_15 > distances_ns6_0_15:
                                     ew_phase_duration6 = 10
                                     traci.trafficlight.setPhase("J20", 0)  # NS direction green
                                     traci.trafficlight.setPhaseDuration("J20", traffic_command6 +  ew_phase_duration6) 
                                elif distances_ew6_15_30 > distances_ns6_15_30:
                                    ew_phase_duration6 = 6
                                    traci.trafficlight.setPhase("J20", 0)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 +  ew_phase_duration6) 
                                elif distances_ew6_gt_30 > distances_ns6_gt_30:
                                    ew_phase_duration6 = 2
                                    traci.trafficlight.setPhase("J20", 0)  # NS direction green
                                    traci.trafficlight.setPhaseDuration("J20", traffic_command6 +  ew_phase_duration6)
                    
                    elif vehicle_count_NS3 > vehicle_count_EW5:
                        if travel_time_NS3_to_J20 < travel_time_EW5_to_J20:
                            ns_phase_duration6 = 25
                            traci.trafficlight.setPhase("J20", 5)  # NS direction green
                            traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ns_phase_duration6)
                        elif travel_time_NS3_to_J20 <= travel_time_EW5_to_J20: 
                             ns_phase_duration6 = 20
                             traci.trafficlight.setPhase("J20", 5)  # NS direction green
                             traci.trafficlight.setPhaseDuration("J20", traffic_command6 + ns_phase_duration6)
                             
                    elif vehicle_count_EW5 > vehicle_count_NS3:
                         if travel_time_EW5_to_J20  < travel_time_NS3_to_J20:
                             ew_phase_duration6 = 25
                             traci.trafficlight.setPhase("J20", 0)  # NS direction green
                             traci.trafficlight.setPhaseDuration("J20", traffic_command6 +  ew_phase_duration6)
                         elif travel_time_EW5_to_J20 <= travel_time_NS3_to_J20: 
                              ew_phase_duration6 = 20
                              traci.trafficlight.setPhase("J20", 0)  # NS direction green
                              traci.trafficlight.setPhaseDuration("J20", traffic_command6 +  ew_phase_duration6)               
                                    
                    else: 
                            traci.trafficlight.setProgram("J20", "0")
                            
                            
                        
            # Calculate average waiting time for each phas
            avg_waiting_time_EW6 = average_waiting_time(detector_phase_EW6)
            avg_waiting_time_NS6 = average_waiting_time(detector_phase_NS6)
           
            #if avg_waiting_time_EW1 != 0 or avg_waiting_time_NS1 != 0:
            sum_avg_waiting_time_EW6 += avg_waiting_time_EW6
            sum_avg_waiting_time_NS6 += avg_waiting_time_NS6
           
            fuel_consumption_EW6, co2_emission_EW6 = calculate_emissions(detector_phase_EW6)
            fuel_consumption_NS6, co2_emission_NS6 = calculate_emissions(detector_phase_NS6) 
            
            sum_fuel_consumption6 +=  fuel_consumption_EW6 + fuel_consumption_NS6
            sum_co2_emission6 +=co2_emission_EW6 + co2_emission_NS6
           
            
                              
                    
        print('done')
    traci.simulationStep()
    step += 1
    

        
traci.close()
print("--- output of first intersection---")
print("total_vehicle_waiting_time_red_line1=")
print(total_vehicle_waiting_timer1)
print("total_vehicle_waiting_time_green_line1=")
print(total_vehicle_waiting_timeg1)
print("emv_waiting_time_Red1 =")
print(emv_waiting_time_red1)
print("emv_waitint_time_green1=")
print(emv_waiting_time_green1)
print("Degree_of _heavy_traffic1=")
print(total_degree_heavy_traffic1)
total_sum_avg_waiting_time1 = sum_avg_waiting_time_EW1 + sum_avg_waiting_time_NS1
print(f"Sum of all average waiting times1=  {total_sum_avg_waiting_time1}")
#total_Fuel_consumption_inter1= fuel_consumption_EW1 + fuel_consumption_NS1
print(f"Total of Fuel Consumption of Intersection1= {sum_fuel_consumption1}")
#total_CO2_emission_inter1=co2_emission_EW1 + co2_emission_NS1
print(f"Total of CO2 emission of Intersection1= {sum_co2_emission1}")


print("--- output of second intersection---")
print("total_vehicle_waiting_time_red_line2=")
print(total_vehicle_waiting_timer2)
print("total_vehicle_waiting_time_green_line2=")
print(total_vehicle_waiting_timeg2)
print("emv_waiting_time_Red2=")
print(emv_waiting_time_red2)
print("emv_waiting_time_green2=")
print(emv_waiting_time_green2)
print("Degree_of _heavy_traffic2=")
print( total_degree_heavy_traffic2)
total_sum_avg_waiting_time2 = sum_avg_waiting_time_EW2 + sum_avg_waiting_time_NS2
print(f"Sum of all average waiting times2=  {total_sum_avg_waiting_time2}")
#total_Fuel_consumption_inter2= fuel_consumption_EW2 + fuel_consumption_NS2
print(f"Total of Fuel Consumption of Intersection2= {sum_fuel_consumption2}")
#total_CO2_emission_inter2=co2_emission_EW2 + co2_emission_NS2
print(f"Total of CO2 emission of Intersection2= {sum_co2_emission2}")


print("--- output of third intersection---")
print("total_vehicle_waiting_time_red_line3=")
print(total_vehicle_waiting_timer3)
print("total_vehicle_waiting_time_green_line3=")
print(total_vehicle_waiting_timeg3)
print("emv_waiting_time_Red3 =")
print(emv_waiting_time_red3)
print("emv_waitint_time_green3=")
print(emv_waiting_time_green3)
print("Degree_of _heavy_traffic3=")
print(total_degree_heavy_traffic3)
total_sum_avg_waiting_time3 = sum_avg_waiting_time_EW3 + sum_avg_waiting_time_NS3
print(f"Sum of all average waiting times3=  {total_sum_avg_waiting_time3}")
#total_Fuel_consumption_inter3= fuel_consumption_EW3 + fuel_consumption_NS3
print(f"Total of Fuel Consumption of Intersection3= {sum_fuel_consumption3}")
#total_CO2_emission_inter3=co2_emission_EW3 + co2_emission_NS3
print(f"Total of CO2 emission of Intersection3= {sum_co2_emission3}")


print("--- output of forth intersection---")
print("total_vehicle_waiting_time_red_line4=")
print(total_vehicle_waiting_timer4)
print("total_vehicle_waiting_time_green_line4=")
print(total_vehicle_waiting_timeg4)
print("emv_waiting_time_Red4=")
print(emv_waiting_time_red4)
print("emv_waiting_time_green4=")
print(emv_waiting_time_green4)
print("Degree_of _heavy_traffic4=")
print( total_degree_heavy_traffic4)
total_sum_avg_waiting_time4 = sum_avg_waiting_time_EW4 + sum_avg_waiting_time_NS4
print(f"Sum of all average waiting times4=  {total_sum_avg_waiting_time4}")
#total_Fuel_consumption_inter4= fuel_consumption_EW4 + fuel_consumption_NS4
print(f"Total of Fuel Consumption of Intersection4= {sum_fuel_consumption4}")
#total_CO2_emission_inter4=co2_emission_EW4 + co2_emission_NS4
print(f"Total of CO2 emission of Intersection4= {sum_co2_emission4}")

print("--- output of Fifth intersection---")
print("total_vehicle_waiting_time_red_line5=")
print(total_vehicle_waiting_timer5)
print("total_vehicle_waiting_time_green_line5=")
print(total_vehicle_waiting_timeg5)
print("emv_waiting_time_Red5 =")
print(emv_waiting_time_red5)
print("emv_waitint_time_green5=")
print(emv_waiting_time_green5)
print("Degree_of _heavy_traffic5=")
print(total_degree_heavy_traffic5)
total_sum_avg_waiting_time5 = sum_avg_waiting_time_EW5 + sum_avg_waiting_time_NS5
print(f"Sum of all average waiting times5=  {total_sum_avg_waiting_time5}")
#total_Fuel_consumption_inter5= fuel_consumption_EW5 + fuel_consumption_NS5
print(f"Total of Fuel Consumption of Intersection5= {sum_fuel_consumption5}")
#total_CO2_emission_inter5=co2_emission_EW5 + co2_emission_NS5
print(f"Total of CO2 emission of Intersection5= {sum_co2_emission5}")

print("--- output of sixth intersection---")
print("total_vehicle_waiting_time_red_line6=")
print(total_vehicle_waiting_timer6)
print("total_vehicle_waiting_time_green_line6=")
print(total_vehicle_waiting_timeg6)
print("emv_waiting_time_Red6=")
print(emv_waiting_time_red6)
print("emv_waiting_time_green6=")
print(emv_waiting_time_green6)
print("Degree_of _heavy_traffic6=")
print( total_degree_heavy_traffic6)
total_sum_avg_waiting_time6 = sum_avg_waiting_time_EW6 + sum_avg_waiting_time_NS6
print(f"Sum of all average waiting times6=  {total_sum_avg_waiting_time6}")
#total_Fuel_consumption_inter6= fuel_consumption_EW6 + fuel_consumption_NS6
print(f"Total of Fuel Consumption of Intersection6= {sum_fuel_consumption6}")
#total_CO2_emission_inter6=co2_emission_EW6 + co2_emission_NS6
print(f"Total of CO2 emission of Intersection6= {sum_co2_emission6}")

print("Final output:")
Total_average_waiting_time= total_sum_avg_waiting_time1 + total_sum_avg_waiting_time2 + total_sum_avg_waiting_time3 + total_sum_avg_waiting_time4 + total_sum_avg_waiting_time5 + total_sum_avg_waiting_time6
print(f"Total of all average waiting times=  {Total_average_waiting_time}")
Total_Fuel_Consumption = sum_fuel_consumption1 + sum_fuel_consumption2 + sum_fuel_consumption3 + sum_fuel_consumption4 + sum_fuel_consumption5 + sum_fuel_consumption6 
print(f"Total of Fuel Consumption = {Total_Fuel_Consumption}")
Total_Co2_emission= sum_co2_emission1 + sum_co2_emission2 + sum_co2_emission3 + sum_co2_emission4 + sum_co2_emission5 + sum_co2_emission6 
print(f"Total of CO2 emission= {Total_Co2_emission}")

with open("amount_stopped_vehicles.txt", "wb") as fp:
    pickle.dump(no_stopped1, fp)

with open("amount_moving_vehicles.txt", "wb") as fp:
    pickle.dump(no_moving1, fp)

print('no o stopped1')
print(len(no_stopped1))
print('no o stopped2')
print(len(no_stopped2))
print('no o stopped3')
print(len(no_stopped3))
print('no o stopped4')
print(len(no_stopped4))
print('no o stopped5')
print(len(no_stopped5))
print('no o stopped6')
print(len(no_stopped6))
print('no o moving1')
print(len(no_moving1))
print('no o moving2')
print(len(no_moving2))
print('no o moving3')
print(len(no_moving3))
print('no o moving4')
print(len(no_moving4))
print('no o moving5')
print(len(no_moving5))
print('no o moving6')
print(len(no_moving6))
t2 = time.time()
print('Elapsed time: {} seconds'.format((t2 - t1)))

input('Press any key to exit')





